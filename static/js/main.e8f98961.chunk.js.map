{"version":3,"sources":["Api/Api.js","Utils/setWeatherImage.js","Components/Loader/loader.js","Pages/MainStyles.js","Utils/cities_list.js","Components/CountriesDropdown/CountriesDropdownStyles.js","Components/CountriesDropdown/CountriesDropdown.js","Components/FooterSwiper/FooterSwiperStyles.js","Components/FooterSwiper/FooterSwiper.js","Pages/Main.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","weatherApi","lat","lon","get","cityName","countryCode","setWeatherImage","weather","time","Loader","width","height","src","alt","Wrapper","styled","div","LoaderWrapper","Container","Header","header","HeaderTop","props","isSelectedCity","CityName","span","CurrentTime","SelectCityButton","button","HeaderBottom","ChangeCityButton","MyLocationButton","Content","ContentTemp","ContentDesc","ContentAdditional","countryList","ModalTitle","ModalSubtitle","ModalInput","input","ModalButton","CountriesDropdown","isModalOpen","closeModal","handleSelectCountry","useState","selectedCityName","setSelectedCityName","ariaHideApp","isOpen","onRequestClose","style","content","top","left","right","bottom","marginRight","transform","borderRadius","background","overlay","backgroundColor","contentLabel","id","onSubmit","e","preventDefault","selectedCountry","find","country","name","countryData","Lookup","byCountry","alert","iso2","list","onChange","target","value","map","key","title","code","type","Footer","footer","FooterContent","FooterItemDivider","FooterItem","FooterItemTime","FooterItemTemp","SwiperCore","use","Navigation","A11y","Scrollbar","DailyForecast","days","className","slidesPerView","modules","navigation","nextEl","prevEl","breakpoints","hours","Date","dt_txt","getHours","minutes","getMinutes","getDay","weekday","toLocaleString","charAt","toUpperCase","slice","temp","Math","round","main","imageUri","hour","minute","includes","Main","inter","setInter","currentLocationData","setCurrentLocationData","isLoading","setIsLoading","setIsSelectedCity","currentTime","setCurrentTime","dailyWeather","setDailyWeather","setIsModalOpen","setSelectedCityTimezone","selectedCity","setSelectedCity","calcTime","offset","console","log","interval","setInterval","normalTimezoneOffset","d","utc","getTime","getTimezoneOffset","nd","window","clearInterval","handleCountrySelect","city","a","weeklyRes","data","coord","locationRes","ms","dt","date","description","feels_like","humidity","pressure","timezone","speed","wind","fetchUserGeolocation","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","enableHighAccuracy","useEffect","toString","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8f98961.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: 'http://api.openweathermap.org/data/2.5/'\n})\n\nexport const weatherApi = {\n  byCoords(lat, lon) {\n    return instance.get(`weather?lat=${lat}&lon=${lon}&units=metric&lang=ru&appid=cf10b6eda7817e86696f8e4106d14a27`)\n  },\n  forWeek(lat, lon) {\n    return instance.get(`forecast?lat=${lat}&lon=${lon}&units=metric&lang=ru&appid=cf10b6eda7817e86696f8e4106d14a27`)\n  },\n  daily(lat, lon) {\n    return instance.get(`forecast/daily?lat=${lat}&lon=${lon}&units=metric&lang=ru&cnt=5&appid=cf10b6eda7817e86696f8e4106d14a27`)\n  },\n  certainCity(cityName, countryCode) {\n    return instance.get(`forecast?q=${cityName},${countryCode}&units=metric&lang=ru&appid=cf10b6eda7817e86696f8e4106d14a27`)\n  }\n}","export const setWeatherImage = (weather, time) => {\n  switch (weather) {\n    case 'Thunderstorm': {\n      return './img/weather/thunder.svg'\n    }\n    case 'Drizzle': {\n      return './img/weather/drizzle.svg'\n    }\n    case 'Rain': {\n      return './img/weather/rain.svg'\n    }\n    case 'Snow': {\n      return './img/weather/snow.svg'\n    }\n    case 'Clear': {\n      if (time >= '18:00' || time <= '05:00') {\n        return './img/weather/night.svg'\n      } else {\n        return './img/weather/day.svg'\n      }\n    }\n    case 'Clouds': {\n      if (time >= '18:00' || time <= '05:00') {\n        return './img/weather/cloudy-night.svg'\n      } else {\n        return './img/weather/cloudy-day.svg'\n      }\n    }\n    default: {\n      return './img/weather/mist.svg'\n    }\n  }\n}","import React from 'react';\n\nconst Loader = () => {\n  return (\n    <div>\n      <img width={100} height={100} src=\"./img/content/loader.svg\" alt=\"Loading...\"/>\n    </div>\n  );\n};\n\nexport default Loader;","import styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-flow: column;\n  min-height: 100vh;\n`;\n\nexport const LoaderWrapper = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  align-items: center;\n  align-content: center;\n  justify-content: center;\n`;\n\nexport const Container = styled.div`\n  max-width: 1440px;\n  margin: 0 auto;\n  width: 100%;\n`;\n\nexport const Header = styled.header`\n  padding: 45px 60px 0 45px;\n  flex: 0 1 auto;\n`;\n\n//header top begins here\nexport const HeaderTop = styled.div`\n  margin-bottom: 30px;\n  display: ${props => props.isSelectedCity ? \"inherit\" : \"flex\"};\n  align-items: flex-end;\n`;\n\nexport const CityName = styled.span`\n  font-weight: 400;\n  font-size: 50px;\n  color: #FFFFFF;\n  margin-right: 80px;\n`;\n\nexport const CurrentTime = styled.span`\n  font-style: normal;\n  font-weight: 400;\n  font-size: 24px;\n  color: #FFFFFF;\n`;\n\nexport const SelectCityButton = styled.button`\n  background: #FFFFFF;\n  box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.15);\n  border-radius: 8px;\n  padding: 14px 50px;\n  border: none;\n  cursor: pointer;\n  outline: inherit;\n  margin-right: 27px;\n\n  font-weight: 400;\n  font-size: 22px;\n  color: #000000;\n`;\n//header top ends here\n\n\n//header bottom begins here\nexport const HeaderBottom = styled.div`\n\n`;\n\nexport const ChangeCityButton = styled.span`\n  font-family: 'Lato', sans-serif;\n  font-weight: 400;\n  font-size: 18px;\n  color: #FFFFFF;\n  mix-blend-mode: normal;\n  opacity: 0.6;\n  margin-right: 30px;\n  cursor: pointer;\n`;\n\nexport const MyLocationButton = styled.span`\n  font-family: 'Lato', sans-serif;\n  font-weight: 400;\n  font-size: 18px;\n  color: #FFFFFF;\n  mix-blend-mode: normal;\n  opacity: 0.6;\n  position: relative;\n  padding-left: 28px;\n  cursor: pointer;\n\n  img {\n    position: absolute;\n    left: 0;\n    bottom: 0;\n  }\n`;\n//header bottom ends here\n\n\n//content part begins here\nexport const Content = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  align-content: center;\n  align-items: center;\n`;\n\nexport const ContentTemp = styled.div`\n  text-align: center;\n  margin-bottom: 30px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  img {\n    margin-right: 44px;\n    width: 140px;\n    height: 140px;\n  }\n\n  span {\n    font-family: 'Lato', sans-serif;\n    font-style: normal;\n    font-weight: 700;\n    font-size: 90px;\n    line-height: 108px;\n    color: #FFFFFF;\n  }\n`;\n\nexport const ContentDesc = styled.div`\n  text-align: center;\n  font-weight: 400;\n  font-size: 30px;\n  color: #FFFFFF;\n`;\n\nexport const ContentAdditional = styled.div`\n  text-align: center;\n  padding-top: 66px;\n  display: flex;\n  justify-content: center;\n\n  div:last-child {\n    padding-right: 0;\n  }\n\n  div {\n    display: flex;\n    align-items: center;\n    align-content: center;\n    flex-wrap: wrap;\n    padding-right: 47px;\n\n    font-weight: 400;\n    font-size: 18px;\n    color: #FFFFFF;\n\n    img {\n    }\n\n    span {\n      padding-left: 15px;\n    }\n  }\n`;\n//content part ends here\n\n","export const countryList = [\n    {\n        \"name\": \"Abidjan\",\n        \"lon\": -4.00167,\n        \"lat\": 5.35444,\n        \"country\": \"Ivory Coast\"\n    },\n    {\n        \"name\": \"Abu Dhabi\",\n        \"lon\": 54.39696,\n        \"lat\": 24.45118,\n        \"country\": \"United Arab Emirates\"\n    },\n    {\n        \"name\": \"Abuja\",\n        \"lon\": 7.49508,\n        \"lat\": 9.05785,\n        \"country\": \"Nigeria\"\n    },\n    {\n        \"name\": \"Accra\",\n        \"lon\": -0.1969,\n        \"lat\": 5.55602,\n        \"country\": \"Ghana\"\n    },\n    {\n        \"name\": \"Addis Ababa\",\n        \"lon\": 38.74689,\n        \"lat\": 9.02497,\n        \"country\": \"Ethiopia\"\n    },\n    {\n        \"name\": \"Ahmedabad\",\n        \"lon\": 72.58727,\n        \"lat\": 23.02579,\n        \"country\": \"India\"\n    },\n    {\n        \"name\": \"Aleppo\",\n        \"lon\": 37.16117,\n        \"lat\": 36.20124,\n        \"country\": \"Syria\"\n    },\n    {\n        \"name\": \"Alexandria\",\n        \"lon\": 29.91582,\n        \"lat\": 31.20176,\n        \"country\": \"Egypt\"\n    },\n    {\n        \"name\": \"Algiers\",\n        \"lon\": 3.08746,\n        \"lat\": 36.73225,\n        \"country\": \"Algeria\"\n    },\n    {\n        \"name\": \"Almaty\",\n        \"lon\": 76.92861,\n        \"lat\": 43.25667,\n        \"country\": \"Kazakhstan\"\n    },\n    {\n        \"name\": \"Amman\",\n        \"lon\": 35.94503,\n        \"lat\": 31.95522,\n        \"country\": \"Jordan\"\n    },\n    {\n        \"name\": \"Amsterdam\",\n        \"lon\": 4.88969,\n        \"lat\": 52.37403,\n        \"country\": \"Netherlands\"\n    },\n    {\n        \"name\": \"Anchorage\",\n        \"lon\": -149.90028,\n        \"lat\": 61.21806,\n        \"country\": \"United States\"\n    },\n    {\n        \"name\": \"Andorra la Vella\",\n        \"lon\": 1.52109,\n        \"lat\": 42.50779,\n        \"country\": \"Andorra\"\n    },\n    {\n        \"name\": \"Ankara\",\n        \"lon\": 32.85427,\n        \"lat\": 39.91987,\n        \"country\": \"Turkey\"\n    },\n    {\n        \"name\": \"Antananarivo\",\n        \"lon\": 47.53613,\n        \"lat\": -18.91368,\n        \"country\": \"Madagascar\"\n    },\n    {\n        \"name\": \"Apia\",\n        \"lon\": -171.76666,\n        \"lat\": -13.83333,\n        \"country\": \"Samoa\"\n    },\n    {\n        \"name\": \"Arnold\",\n        \"lon\": -120.351935,\n        \"lat\": 38.255366,\n        \"country\": \"United States\"\n    },\n    {\n        \"name\": \"Ashgabat\",\n        \"lon\": 58.38333,\n        \"lat\": 37.95,\n        \"country\": \"Turkmenistan\"\n    },\n    {\n        \"name\": \"Asmara\",\n        \"lon\": 38.93184,\n        \"lat\": 15.33805,\n        \"country\": \"Eritrea\"\n    },\n    {\n        \"name\": \"Asuncion\",\n        \"lon\": -57.647,\n        \"lat\": -25.28646,\n        \"country\": \"Paraguay\"\n    },\n    {\n        \"name\": \"Athens\",\n        \"lon\": 23.72784,\n        \"lat\": 37.98376,\n        \"country\": \"Greece\"\n    },\n    {\n        \"name\": \"Auckland\",\n        \"lon\": 174.76349,\n        \"lat\": -36.84853,\n        \"country\": \"New Zealand\"\n    },\n    {\n        \"name\": \"Avarua\",\n        \"lon\": -159.77545,\n        \"lat\": -21.2075,\n        \"country\": \"Cook Islands\"\n    },\n    {\n        \"name\": \"Baghdad\",\n        \"lon\": 44.40088,\n        \"lat\": 33.34058,\n        \"country\": \"Iraq\"\n    },\n    {\n        \"name\": \"Baku\",\n        \"lon\": 49.89201,\n        \"lat\": 40.37767,\n        \"country\": \"Azerbaijan\"\n    },\n    {\n        \"name\": \"Bamako\",\n        \"lon\": -8,\n        \"lat\": 12.65,\n        \"country\": \"Mali\"\n    },\n    {\n        \"name\": \"Banda Aceh\",\n        \"lon\": 95.33333,\n        \"lat\": 5.54167,\n        \"country\": \"Indonesia\"\n    },\n    {\n        \"name\": \"Bandar Seri Begawan\",\n        \"lon\": 114.94006,\n        \"lat\": 4.89035,\n        \"country\": \"Brunei\"\n    },\n    {\n        \"name\": \"Bandung\",\n        \"lon\": 107.60694,\n        \"lat\": -6.92222,\n        \"country\": \"Indonesia\"\n    },\n    {\n        \"name\": \"Bangkok\",\n        \"lon\": 100.50144,\n        \"lat\": 13.75398,\n        \"country\": \"Thailand\"\n    },\n    {\n        \"name\": \"Bangui\",\n        \"lon\": 18.55496,\n        \"lat\": 4.36122,\n        \"country\": \"Central African Republic\"\n    },\n    {\n        \"name\": \"Banjul\",\n        \"lon\": -16.57803,\n        \"lat\": 13.45274,\n        \"country\": \"Gambia\"\n    },\n    {\n        \"name\": \"Barcelona\",\n        \"lon\": 2.15899,\n        \"lat\": 41.38879,\n        \"country\": \"Spain\"\n    },\n    {\n        \"name\": \"Barranquilla\",\n        \"lon\": -74.78132,\n        \"lat\": 10.96854,\n        \"country\": \"Colombia\"\n    },\n    {\n        \"name\": \"Basrah\",\n        \"lon\": 47.7804,\n        \"lat\": 30.50852,\n        \"country\": \"Iraq\"\n    },\n    {\n        \"name\": \"Basse-Terre\",\n        \"lon\": -61.73214,\n        \"lat\": 15.99714,\n        \"country\": \"Guadeloupe\"\n    },\n    {\n        \"name\": \"Basseterre\",\n        \"lon\": -62.72499,\n        \"lat\": 17.2955,\n        \"country\": \"Saint Kitts and Nevis\"\n    },\n    {\n        \"name\": \"Beijing\",\n        \"lon\": 116.39723,\n        \"lat\": 39.9075,\n        \"country\": \"China\"\n    },\n    {\n        \"name\": \"Beirut\",\n        \"lon\": 35.50157,\n        \"lat\": 33.89332,\n        \"country\": \"Lebanon\"\n    },\n    {\n        \"name\": \"Bekasi\",\n        \"lon\": 106.9896,\n        \"lat\": -6.2349,\n        \"country\": \"Indonesia\"\n    },\n    {\n        \"name\": \"Belem\",\n        \"lon\": -48.50444,\n        \"lat\": -1.45583,\n        \"country\": \"Brazil\"\n    },\n    {\n        \"name\": \"Belgrade\",\n        \"lon\": 20.46513,\n        \"lat\": 44.80401,\n        \"country\": \"Serbia\"\n    },\n    {\n        \"name\": \"Belmopan\",\n        \"lon\": -88.76667,\n        \"lat\": 17.25,\n        \"country\": \"Belize\"\n    },\n    {\n        \"name\": \"Belo Horizonte\",\n        \"lon\": -43.93778,\n        \"lat\": -19.92083,\n        \"country\": \"Brazil\"\n    },\n    {\n        \"name\": \"Bengaluru\",\n        \"lon\": 77.59369,\n        \"lat\": 12.97194,\n        \"country\": \"India\"\n    },\n    {\n        \"name\": \"Berlin\",\n        \"lon\": 13.41053,\n        \"lat\": 52.52437,\n        \"country\": \"Germany\"\n    },\n    {\n        \"name\": \"Bern\",\n        \"lon\": 7.44744,\n        \"lat\": 46.94809,\n        \"country\": \"Switzerland\"\n    },\n    {\n        \"name\": \"Bishkek\",\n        \"lon\": 74.59,\n        \"lat\": 42.87,\n        \"country\": \"Kyrgyzstan\"\n    },\n    {\n        \"name\": \"Bissau\",\n        \"lon\": -15.59767,\n        \"lat\": 11.86357,\n        \"country\": \"Guinea-Bissau\"\n    },\n    {\n        \"name\": \"Bogota\",\n        \"lon\": -74.08175,\n        \"lat\": 4.60971,\n        \"country\": \"Colombia\"\n    },\n    {\n        \"name\": \"Brasilia\",\n        \"lon\": -47.92972,\n        \"lat\": -15.77972,\n        \"country\": \"Brazil\"\n    },\n    {\n        \"name\": \"Bratislava\",\n        \"lon\": 17.10674,\n        \"lat\": 48.14816,\n        \"country\": \"Slovakia\"\n    },\n    {\n        \"name\": \"Brazzaville\",\n        \"lon\": 15.28318,\n        \"lat\": -4.26613,\n        \"country\": \"Republic of the Congo\"\n    },\n    {\n        \"name\": \"Bridgetown\",\n        \"lon\": -59.62021,\n        \"lat\": 13.10732,\n        \"country\": \"Barbados\"\n    },\n    {\n        \"name\": \"Brisbane\",\n        \"lon\": 153.02809,\n        \"lat\": -27.46794,\n        \"country\": \"Australia\"\n    },\n    {\n        \"name\": \"Brussels\",\n        \"lon\": 4.34878,\n        \"lat\": 50.85045,\n        \"country\": \"Belgium\"\n    },\n    {\n        \"name\": \"Bucharest\",\n        \"lon\": 26.10626,\n        \"lat\": 44.43225,\n        \"country\": \"Romania\"\n    },\n    {\n        \"name\": \"Budapest\",\n        \"lon\": 19.04045,\n        \"lat\": 47.49835,\n        \"country\": \"Hungary\"\n    },\n    {\n        \"name\": \"Buenos Aires\",\n        \"lon\": -58.37723,\n        \"lat\": -34.61315,\n        \"country\": \"Argentina\"\n    },\n    {\n        \"name\": \"Bujumbura\",\n        \"lon\": 29.36142,\n        \"lat\": -3.38193,\n        \"country\": \"Burundi\"\n    },\n    {\n        \"name\": \"Bursa\",\n        \"lon\": 29.06013,\n        \"lat\": 40.19559,\n        \"country\": \"Turkey\"\n    },\n    {\n        \"name\": \"Busan\",\n        \"lon\": 129.03004,\n        \"lat\": 35.10168,\n        \"country\": \"South Korea\"\n    },\n    {\n        \"name\": \"Cairo\",\n        \"lon\": 31.24967,\n        \"lat\": 30.06263,\n        \"country\": \"Egypt\"\n    },\n    {\n        \"name\": \"Cali\",\n        \"lon\": -76.5225,\n        \"lat\": 3.43722,\n        \"country\": \"Colombia\"\n    },\n    {\n        \"name\": \"Caloocan\",\n        \"lon\": 120.96788,\n        \"lat\": 14.64953,\n        \"country\": \"Philippines\"\n    },\n    {\n        \"name\": \"Camayenne\",\n        \"lon\": -13.68778,\n        \"lat\": 9.535,\n        \"country\": \"Guinea\"\n    },\n    {\n        \"name\": \"Canberra\",\n        \"lon\": 149.12807,\n        \"lat\": -35.28346,\n        \"country\": \"Australia\"\n    },\n    {\n        \"name\": \"Cape Town\",\n        \"lon\": 18.42322,\n        \"lat\": -33.92584,\n        \"country\": \"South Africa\"\n    },\n    {\n        \"name\": \"Caracas\",\n        \"lon\": -66.87919,\n        \"lat\": 10.48801,\n        \"country\": \"Venezuela\"\n    },\n    {\n        \"name\": \"Casablanca\",\n        \"lon\": -7.61138,\n        \"lat\": 33.58831,\n        \"country\": \"Morocco\"\n    },\n    {\n        \"name\": \"Castries\",\n        \"lon\": -61.00614,\n        \"lat\": 13.9957,\n        \"country\": \"Saint Lucia\"\n    },\n    {\n        \"name\": \"Cayenne\",\n        \"lon\": -52.33333,\n        \"lat\": 4.93333,\n        \"country\": \"French Guiana\"\n    },\n    {\n        \"name\": \"Charlotte Amalie\",\n        \"lon\": -64.9307,\n        \"lat\": 18.3419,\n        \"country\": \"U.S. Virgin Islands\"\n    },\n    {\n        \"name\": \"Chengdu\",\n        \"lon\": 104.06667,\n        \"lat\": 30.66667,\n        \"country\": \"China\"\n    },\n    {\n        \"name\": \"Chennai\",\n        \"lon\": 80.27847,\n        \"lat\": 13.08784,\n        \"country\": \"India\"\n    },\n    {\n        \"name\": \"Chicago\",\n        \"lon\": -87.65005,\n        \"lat\": 41.85003,\n        \"country\": \"United States\"\n    },\n    {\n        \"name\": \"Chisinau\",\n        \"lon\": 28.8575,\n        \"lat\": 47.00556,\n        \"country\": \"Moldova\"\n    },\n    {\n        \"name\": \"Chittagong\",\n        \"lon\": 91.83168,\n        \"lat\": 22.3384,\n        \"country\": \"Bangladesh\"\n    },\n    {\n        \"name\": \"Chongqing\",\n        \"lon\": 106.55278,\n        \"lat\": 29.56278,\n        \"country\": \"China\"\n    },\n    {\n        \"name\": \"Colombo\",\n        \"lon\": 79.84868,\n        \"lat\": 6.93548,\n        \"country\": \"Sri Lanka\"\n    },\n    {\n        \"name\": \"Conakry\",\n        \"lon\": -13.67729,\n        \"lat\": 9.53795,\n        \"country\": \"Guinea\"\n    },\n    {\n        \"name\": \"Copenhagen\",\n        \"lon\": 12.56553,\n        \"lat\": 55.67594,\n        \"country\": \"Denmark\"\n    },\n    {\n        \"name\": \"Cordoba\",\n        \"lon\": -64.18105,\n        \"lat\": -31.4135,\n        \"country\": \"Argentina\"\n    },\n    {\n        \"name\": \"Curitiba\",\n        \"lon\": -49.27306,\n        \"lat\": -25.42778,\n        \"country\": \"Brazil\"\n    },\n    {\n        \"name\": \"Daegu\",\n        \"lon\": 128.59111,\n        \"lat\": 35.87028,\n        \"country\": \"South Korea\"\n    },\n    {\n        \"name\": \"Daejeon\",\n        \"lon\": 127.38493,\n        \"lat\": 36.34913,\n        \"country\": \"South Korea\"\n    },\n    {\n        \"name\": \"Dakar\",\n        \"lon\": -17.44406,\n        \"lat\": 14.6937,\n        \"country\": \"Senegal\"\n    },\n    {\n        \"name\": \"Dallas\",\n        \"lon\": -96.80667,\n        \"lat\": 32.78306,\n        \"country\": \"United States\"\n    },\n    {\n        \"name\": \"Damascus\",\n        \"lon\": 36.29128,\n        \"lat\": 33.5102,\n        \"country\": \"Syria\"\n    },\n    {\n        \"name\": \"Dar es Salaam\",\n        \"lon\": 39.26951,\n        \"lat\": -6.82349,\n        \"country\": \"Tanzania\"\n    },\n    {\n        \"name\": \"Delhi\",\n        \"lon\": 77.23149,\n        \"lat\": 28.65195,\n        \"country\": \"India\"\n    },\n    {\n        \"name\": \"Denver\",\n        \"lon\": -104.9847,\n        \"lat\": 39.73915,\n        \"country\": \"United States\"\n    },\n    {\n        \"name\": \"Dhaka\",\n        \"lon\": 90.40744,\n        \"lat\": 23.7104,\n        \"country\": \"Bangladesh\"\n    },\n    {\n        \"name\": \"Dili\",\n        \"lon\": 125.57361,\n        \"lat\": -8.55861,\n        \"country\": \"Timor Leste\"\n    },\n    {\n        \"name\": \"Djibouti\",\n        \"lon\": 43.14503,\n        \"lat\": 11.58901,\n        \"country\": \"Djibouti\"\n    },\n    {\n        \"name\": \"Dodoma\",\n        \"lon\": 35.73947,\n        \"lat\": -6.17221,\n        \"country\": \"Tanzania\"\n    },\n    {\n        \"name\": \"Doha\",\n        \"lon\": 51.53096,\n        \"lat\": 25.28545,\n        \"country\": \"Qatar\"\n    },\n    {\n        \"name\": \"Dongguan\",\n        \"lon\": 113.74866,\n        \"lat\": 23.01797,\n        \"country\": \"China\"\n    },\n    {\n        \"name\": \"Douala\",\n        \"lon\": 9.70428,\n        \"lat\": 4.04827,\n        \"country\": \"Cameroon\"\n    },\n    {\n        \"name\": \"Douglas\",\n        \"lon\": -4.48333,\n        \"lat\": 54.15,\n        \"country\": \"Isle of Man\"\n    },\n    {\n        \"name\": \"Dubai\",\n        \"lon\": 55.30927,\n        \"lat\": 25.07725,\n        \"country\": \"United Arab Emirates\"\n    },\n    {\n        \"name\": \"Dublin\",\n        \"lon\": -6.24889,\n        \"lat\": 53.33306,\n        \"country\": \"Ireland\"\n    },\n    {\n        \"name\": \"Durban\",\n        \"lon\": 31.0292,\n        \"lat\": -29.8579,\n        \"country\": \"South Africa\"\n    },\n    {\n        \"name\": \"Dushanbe\",\n        \"lon\": 68.77905,\n        \"lat\": 38.53575,\n        \"country\": \"Tajikistan\"\n    },\n    {\n        \"name\": \"Faisalabad\",\n        \"lon\": 73.08969,\n        \"lat\": 31.41554,\n        \"country\": \"Pakistan\"\n    },\n    {\n        \"name\": \"Fort-de-France\",\n        \"lon\": -61.07418,\n        \"lat\": 14.60365,\n        \"country\": \"Martinique\"\n    },\n    {\n        \"name\": \"Fortaleza\",\n        \"lon\": -38.54306,\n        \"lat\": -3.71722,\n        \"country\": \"Brazil\"\n    },\n    {\n        \"name\": \"Freetown\",\n        \"lon\": -13.2356,\n        \"lat\": 8.48714,\n        \"country\": \"Sierra Leone\"\n    },\n    {\n        \"name\": \"Fukuoka\",\n        \"lon\": 130.41667,\n        \"lat\": 33.6,\n        \"country\": \"Japan\"\n    },\n    {\n        \"name\": \"Funafuti\",\n        \"lon\": 179.19417,\n        \"lat\": -8.52425,\n        \"country\": \"Tuvalu\"\n    },\n    {\n        \"name\": \"Gaborone\",\n        \"lon\": 25.90859,\n        \"lat\": -24.65451,\n        \"country\": \"Botswana\"\n    },\n    {\n        \"name\": \"George Town\",\n        \"lon\": -81.37436,\n        \"lat\": 19.2866,\n        \"country\": \"Malaysia\"\n    },\n    {\n        \"name\": \"Georgetown\",\n        \"lon\": -58.15527,\n        \"lat\": 6.80448,\n        \"country\": \"Guyana\"\n    },\n    {\n        \"name\": \"Gibraltar\",\n        \"lon\": -5.35257,\n        \"lat\": 36.14474,\n        \"country\": \"Gibraltar\"\n    },\n    {\n        \"name\": \"Gitega\",\n        \"lon\": 29.92463,\n        \"lat\": -3.42708,\n        \"country\": \"Burundi\"\n    },\n    {\n        \"name\": \"Giza\",\n        \"lon\": 31.20861,\n        \"lat\": 30.00944,\n        \"country\": \"Egypt\"\n    },\n    {\n        \"name\": \"Guadalajara\",\n        \"lon\": -103.39182,\n        \"lat\": 20.66682,\n        \"country\": \"Mexico\"\n    },\n    {\n        \"name\": \"Guangzhou\",\n        \"lon\": 113.25,\n        \"lat\": 23.11667,\n        \"country\": \"China\"\n    },\n    {\n        \"name\": \"Guatemala City\",\n        \"lon\": -90.51327,\n        \"lat\": 14.64072,\n        \"country\": \"Guatemala\"\n    },\n    {\n        \"name\": \"Guayaquil\",\n        \"lon\": -79.88621,\n        \"lat\": -2.19616,\n        \"country\": \"Ecuador\"\n    },\n    {\n        \"name\": \"Gujranwala\",\n        \"lon\": 74.18705,\n        \"lat\": 32.15567,\n        \"country\": \"Pakistan\"\n    },\n    {\n        \"name\": \"Gustavia\",\n        \"lon\": -62.84978,\n        \"lat\": 17.89618,\n        \"country\": \"Saint Barthelemy\"\n    },\n    {\n        \"name\": \"Gwangju\",\n        \"lon\": 126.91556,\n        \"lat\": 35.15472,\n        \"country\": \"South Korea\"\n    },\n    {\n        \"name\": \"Hamburg\",\n        \"lon\": 9.99302,\n        \"lat\": 53.55073,\n        \"country\": \"Germany\"\n    },\n    {\n        \"name\": \"Hanoi\",\n        \"lon\": 105.84117,\n        \"lat\": 21.0245,\n        \"country\": \"Vietnam\"\n    },\n    {\n        \"name\": \"Harare\",\n        \"lon\": 31.05337,\n        \"lat\": -17.82772,\n        \"country\": \"Zimbabwe\"\n    },\n    {\n        \"name\": \"Havana\",\n        \"lon\": -82.38304,\n        \"lat\": 23.13302,\n        \"country\": \"Cuba\"\n    },\n    {\n        \"name\": \"Helsinki\",\n        \"lon\": 24.93545,\n        \"lat\": 60.16952,\n        \"country\": \"Finland\"\n    },\n    {\n        \"name\": \"Ho Chi Minh City\",\n        \"lon\": 106.62965,\n        \"lat\": 10.82302,\n        \"country\": \"Vietnam\"\n    },\n    {\n        \"name\": \"Hong Kong\",\n        \"lon\": 114.17469,\n        \"lat\": 22.27832,\n        \"country\": \"Hong Kong\"\n    },\n    {\n        \"name\": \"Honiara\",\n        \"lon\": 159.95,\n        \"lat\": -9.43333,\n        \"country\": \"Solomon Islands\"\n    },\n    {\n        \"name\": \"Honolulu\",\n        \"lon\": -157.85833,\n        \"lat\": 21.30694,\n        \"country\": \"United States\"\n    },\n    {\n        \"name\": \"Houston\",\n        \"lon\": -95.36327,\n        \"lat\": 29.76328,\n        \"country\": \"United States\"\n    },\n    {\n        \"name\": \"Hyderabad\",\n        \"lon\": 78.45636,\n        \"lat\": 17.38405,\n        \"country\": \"India\"\n    },\n    {\n        \"name\": \"Hyderabad\",\n        \"lon\": 68.37366,\n        \"lat\": 25.39242,\n        \"country\": \"Pakistan\"\n    },\n    {\n        \"name\": \"Ibadan\",\n        \"lon\": 3.90591,\n        \"lat\": 7.37756,\n        \"country\": \"Nigeria\"\n    },\n    {\n        \"name\": \"Incheon\",\n        \"lon\": 126.70515,\n        \"lat\": 37.45646,\n        \"country\": \"South Korea\"\n    },\n    {\n        \"name\": \"Isfahan\",\n        \"lon\": 51.67462,\n        \"lat\": 32.65246,\n        \"country\": \"Iran\"\n    },\n    {\n        \"name\": \"Islamabad\",\n        \"lon\": 73.04329,\n        \"lat\": 33.72148,\n        \"country\": \"Pakistan\"\n    },\n    {\n        \"name\": \"Istanbul\",\n        \"lon\": 28.94966,\n        \"lat\": 41.01384,\n        \"country\": \"Turkey\"\n    },\n    {\n        \"name\": \"Izmir\",\n        \"lon\": 27.13838,\n        \"lat\": 38.41273,\n        \"country\": \"Turkey\"\n    },\n    {\n        \"name\": \"Jaipur\",\n        \"lon\": 75.78781,\n        \"lat\": 26.91962,\n        \"country\": \"India\"\n    },\n    {\n        \"name\": \"Jakarta\",\n        \"lon\": 106.84513,\n        \"lat\": -6.21462,\n        \"country\": \"Indonesia\"\n    },\n    {\n        \"name\": \"Jeddah\",\n        \"lon\": 39.18624,\n        \"lat\": 21.49012,\n        \"country\": \"Saudi Arabia\"\n    },\n    {\n        \"name\": \"Jerusalem\",\n        \"lon\": 35.21633,\n        \"lat\": 31.76904,\n        \"country\": \"Israel\"\n    },\n    {\n        \"name\": \"Johannesburg\",\n        \"lon\": 28.04363,\n        \"lat\": -26.20227,\n        \"country\": \"South Africa\"\n    },\n    {\n        \"name\": \"Juarez\",\n        \"lon\": -106.46084,\n        \"lat\": 31.72024,\n        \"country\": \"Mexico\"\n    },\n    {\n        \"name\": \"Juba\",\n        \"lon\": 31.58247,\n        \"lat\": 4.85165,\n        \"country\": \"South Sudan\"\n    },\n    {\n        \"name\": \"Kabul\",\n        \"lon\": 69.17233,\n        \"lat\": 34.52813,\n        \"country\": \"Afghanistan\"\n    },\n    {\n        \"name\": \"Kaduna\",\n        \"lon\": 7.43879,\n        \"lat\": 10.52641,\n        \"country\": \"Nigeria\"\n    },\n    {\n        \"name\": \"Kampala\",\n        \"lon\": 32.58219,\n        \"lat\": 0.31628,\n        \"country\": \"Uganda\"\n    },\n    {\n        \"name\": \"Kano\",\n        \"lon\": 8.51672,\n        \"lat\": 12.00012,\n        \"country\": \"Nigeria\"\n    },\n    {\n        \"name\": \"Kanpur\",\n        \"lon\": 80.34975,\n        \"lat\": 26.46523,\n        \"country\": \"India\"\n    },\n    {\n        \"name\": \"Kaohsiung\",\n        \"lon\": 120.31333,\n        \"lat\": 22.61626,\n        \"country\": \"Taiwan\"\n    },\n    {\n        \"name\": \"Karachi\",\n        \"lon\": 67.0104,\n        \"lat\": 24.8608,\n        \"country\": \"Pakistan\"\n    },\n    {\n        \"name\": \"Karaj\",\n        \"lon\": 50.99155,\n        \"lat\": 35.83266,\n        \"country\": \"Iran\"\n    },\n    {\n        \"name\": \"Kathmandu\",\n        \"lon\": 85.3206,\n        \"lat\": 27.70169,\n        \"country\": \"Nepal\"\n    },\n    {\n        \"name\": \"Kawasaki\",\n        \"lon\": 139.71722,\n        \"lat\": 35.52056,\n        \"country\": \"Japan\"\n    },\n    {\n        \"name\": \"Kharkiv\",\n        \"lon\": 36.25272,\n        \"lat\": 49.98081,\n        \"country\": \"Ukraine\"\n    },\n    {\n        \"name\": \"Khartoum\",\n        \"lon\": 32.53241,\n        \"lat\": 15.55177,\n        \"country\": \"Sudan\"\n    },\n    {\n        \"name\": \"Khulna\",\n        \"lon\": 89.56439,\n        \"lat\": 22.80979,\n        \"country\": \"Bangladesh\"\n    },\n    {\n        \"name\": \"Kigali\",\n        \"lon\": 30.05885,\n        \"lat\": -1.94995,\n        \"country\": \"Rwanda\"\n    },\n    {\n        \"name\": \"Kingsburg\",\n        \"lon\": -119.554,\n        \"lat\": 36.5138,\n        \"country\": \"United States\"\n    },\n    {\n        \"name\": \"Kingston\",\n        \"lon\": -76.79358,\n        \"lat\": 17.99702,\n        \"country\": \"Jamaica\"\n    },\n    {\n        \"name\": \"Kingstown\",\n        \"lon\": -61.22742,\n        \"lat\": 13.15527,\n        \"country\": \"Saint Vincent and the Grenadines\"\n    },\n    {\n        \"name\": \"Kinshasa\",\n        \"lon\": 15.31357,\n        \"lat\": -4.32758,\n        \"country\": \"Democratic Republic of the Congo\"\n    },\n    {\n        \"name\": \"Kobe\",\n        \"lon\": 135.183,\n        \"lat\": 34.6913,\n        \"country\": \"Japan\"\n    },\n    {\n        \"name\": \"Kolkata\",\n        \"lon\": 88.36304,\n        \"lat\": 22.56263,\n        \"country\": \"India\"\n    },\n    {\n        \"name\": \"Kota Bharu\",\n        \"lon\": 102.24333,\n        \"lat\": 6.12361,\n        \"country\": \"Malaysia\"\n    },\n    {\n        \"name\": \"Kowloon\",\n        \"lon\": 114.18333,\n        \"lat\": 22.31667,\n        \"country\": \"Hong Kong\"\n    },\n    {\n        \"name\": \"Kuala Lumpur\",\n        \"lon\": 101.68653,\n        \"lat\": 3.1412,\n        \"country\": \"Malaysia\"\n    },\n    {\n        \"name\": \"Kumasi\",\n        \"lon\": -1.62443,\n        \"lat\": 6.68848,\n        \"country\": \"Ghana\"\n    },\n    {\n        \"name\": \"Kuwait\",\n        \"lon\": 47.97833,\n        \"lat\": 29.36972,\n        \"country\": \"Kuwait\"\n    },\n    {\n        \"name\": \"Kyiv\",\n        \"lon\": 30.5238,\n        \"lat\": 50.45466,\n        \"country\": \"Ukraine\"\n    },\n    {\n        \"name\": \"Kyoto\",\n        \"lon\": 135.75385,\n        \"lat\": 35.02107,\n        \"country\": \"Japan\"\n    },\n    {\n        \"name\": \"La Paz\",\n        \"lon\": -68.15,\n        \"lat\": -16.5,\n        \"country\": \"Bolivia\"\n    },\n    {\n        \"name\": \"Lagos\",\n        \"lon\": 3.39467,\n        \"lat\": 6.45407,\n        \"country\": \"Nigeria\"\n    },\n    {\n        \"name\": \"Lahore\",\n        \"lon\": 74.35071,\n        \"lat\": 31.558,\n        \"country\": \"Pakistan\"\n    },\n    {\n        \"name\": \"Libreville\",\n        \"lon\": 9.45356,\n        \"lat\": 0.39241,\n        \"country\": \"Gabon\"\n    },\n    {\n        \"name\": \"Lilongwe\",\n        \"lon\": 33.78725,\n        \"lat\": -13.96692,\n        \"country\": \"Malawi\"\n    },\n    {\n        \"name\": \"Lima\",\n        \"lon\": -77.02824,\n        \"lat\": -12.04318,\n        \"country\": \"Peru\"\n    },\n    {\n        \"name\": \"Lisbon\",\n        \"lon\": -9.13333,\n        \"lat\": 38.71667,\n        \"country\": \"Portugal\"\n    },\n    {\n        \"name\": \"Ljubljana\",\n        \"lon\": 14.50513,\n        \"lat\": 46.05108,\n        \"country\": \"Slovenia\"\n    },\n    {\n        \"name\": \"Lome\",\n        \"lon\": 1.22154,\n        \"lat\": 6.12874,\n        \"country\": \"Togo\"\n    },\n    {\n        \"name\": \"London\",\n        \"lon\": -0.12574,\n        \"lat\": 51.50853,\n        \"country\": \"United Kingdom\"\n    },\n    {\n        \"name\": \"Los Angeles\",\n        \"lon\": -118.24368,\n        \"lat\": 34.05223,\n        \"country\": \"United States\"\n    },\n    {\n        \"name\": \"Luanda\",\n        \"lon\": 13.23432,\n        \"lat\": -8.83682,\n        \"country\": \"Angola\"\n    },\n    {\n        \"name\": \"Lubumbashi\",\n        \"lon\": 27.47938,\n        \"lat\": -11.66089,\n        \"country\": \"Democratic Republic of the Congo\"\n    },\n    {\n        \"name\": \"Lusaka\",\n        \"lon\": 28.28713,\n        \"lat\": -15.40669,\n        \"country\": \"Zambia\"\n    },\n    {\n        \"name\": \"Luxembourg\",\n        \"lon\": 6.13,\n        \"lat\": 49.61167,\n        \"country\": \"Luxembourg\"\n    },\n    {\n        \"name\": \"Macau\",\n        \"lon\": 113.54611,\n        \"lat\": 22.20056,\n        \"country\": \"Macao\"\n    },\n    {\n        \"name\": \"Madrid\",\n        \"lon\": -3.70256,\n        \"lat\": 40.4165,\n        \"country\": \"Spain\"\n    },\n    {\n        \"name\": \"Majuro\",\n        \"lon\": 171.38027,\n        \"lat\": 7.08971,\n        \"country\": \"Marshall Islands\"\n    },\n    {\n        \"name\": \"Makassar\",\n        \"lon\": 119.43194,\n        \"lat\": -5.14861,\n        \"country\": \"Indonesia\"\n    },\n    {\n        \"name\": \"Malabo\",\n        \"lon\": 8.78166,\n        \"lat\": 3.75578,\n        \"country\": \"Equatorial Guinea\"\n    },\n    {\n        \"name\": \"Male\",\n        \"lon\": 73.50916,\n        \"lat\": 4.17521,\n        \"country\": \"Maldives\"\n    },\n    {\n        \"name\": \"Mamoudzou\",\n        \"lon\": 45.22878,\n        \"lat\": -12.78234,\n        \"country\": \"Mayotte\"\n    },\n    {\n        \"name\": \"Managua\",\n        \"lon\": -86.2504,\n        \"lat\": 12.13282,\n        \"country\": \"Nicaragua\"\n    },\n    {\n        \"name\": \"Manama\",\n        \"lon\": 50.58565,\n        \"lat\": 26.22787,\n        \"country\": \"Bahrain\"\n    },\n    {\n        \"name\": \"Manaus\",\n        \"lon\": -60.025,\n        \"lat\": -3.10194,\n        \"country\": \"Brazil\"\n    },\n    {\n        \"name\": \"Manila\",\n        \"lon\": 120.9822,\n        \"lat\": 14.6042,\n        \"country\": \"Philippines\"\n    },\n    {\n        \"name\": \"Maputo\",\n        \"lon\": 32.58322,\n        \"lat\": -25.96553,\n        \"country\": \"Mozambique\"\n    },\n    {\n        \"name\": \"Maracaibo\",\n        \"lon\": -71.61245,\n        \"lat\": 10.66663,\n        \"country\": \"Venezuela\"\n    },\n    {\n        \"name\": \"Maracay\",\n        \"lon\": -67.59113,\n        \"lat\": 10.23535,\n        \"country\": \"Venezuela\"\n    },\n    {\n        \"name\": \"Mariehamn\",\n        \"lon\": 19.93481,\n        \"lat\": 60.09726,\n        \"country\": \"Aland Islands\"\n    },\n    {\n        \"name\": \"Marigot\",\n        \"lon\": -63.08302,\n        \"lat\": 18.06819,\n        \"country\": \"Saint Martin\"\n    },\n    {\n        \"name\": \"Maseru\",\n        \"lon\": 27.48333,\n        \"lat\": -29.31667,\n        \"country\": \"Lesotho\"\n    },\n    {\n        \"name\": \"Mashhad\",\n        \"lon\": 59.56796,\n        \"lat\": 36.31559,\n        \"country\": \"Iran\"\n    },\n    {\n        \"name\": \"Mbabane\",\n        \"lon\": 31.13333,\n        \"lat\": -26.31667,\n        \"country\": \"Eswatini\"\n    },\n    {\n        \"name\": \"Mecca\",\n        \"lon\": 39.82563,\n        \"lat\": 21.42664,\n        \"country\": \"Saudi Arabia\"\n    },\n    {\n        \"name\": \"Medan\",\n        \"lon\": 98.66667,\n        \"lat\": 3.58333,\n        \"country\": \"Indonesia\"\n    },\n    {\n        \"name\": \"Medellin\",\n        \"lon\": -75.56359,\n        \"lat\": 6.25184,\n        \"country\": \"Colombia\"\n    },\n    {\n        \"name\": \"Medina\",\n        \"lon\": 39.61417,\n        \"lat\": 24.46861,\n        \"country\": \"Saudi Arabia\"\n    },\n    {\n        \"name\": \"Melbourne\",\n        \"lon\": 144.96332,\n        \"lat\": -37.814,\n        \"country\": \"Australia\"\n    },\n    {\n        \"name\": \"Mexico City\",\n        \"lon\": -99.12766,\n        \"lat\": 19.42847,\n        \"country\": \"Mexico\"\n    },\n    {\n        \"name\": \"Miami\",\n        \"lon\": -80.19366,\n        \"lat\": 25.77427,\n        \"country\": \"United States\"\n    },\n    {\n        \"name\": \"Minsk\",\n        \"lon\": 27.56667,\n        \"lat\": 53.9,\n        \"country\": \"Belarus\"\n    },\n    {\n        \"name\": \"Mogadishu\",\n        \"lon\": 45.34375,\n        \"lat\": 2.03711,\n        \"country\": \"Somalia\"\n    },\n    {\n        \"name\": \"Monaco\",\n        \"lon\": 7.41667,\n        \"lat\": 43.73333,\n        \"country\": \"Monaco\"\n    },\n    {\n        \"name\": \"Monrovia\",\n        \"lon\": -10.7969,\n        \"lat\": 6.30054,\n        \"country\": \"Liberia\"\n    },\n    {\n        \"name\": \"Montevideo\",\n        \"lon\": -56.18816,\n        \"lat\": -34.90328,\n        \"country\": \"Uruguay\"\n    },\n    {\n        \"name\": \"Montreal\",\n        \"lon\": -73.58781,\n        \"lat\": 45.50884,\n        \"country\": \"Canada\"\n    },\n    {\n        \"name\": \"Moroni\",\n        \"lon\": 43.25506,\n        \"lat\": -11.70216,\n        \"country\": \"Comoros\"\n    },\n    {\n        \"name\": \"Moscow\",\n        \"lon\": 37.61556,\n        \"lat\": 55.75222,\n        \"country\": \"Russia\"\n    },\n    {\n        \"name\": \"Mosul\",\n        \"lon\": 43.11889,\n        \"lat\": 36.335,\n        \"country\": \"Iraq\"\n    },\n    {\n        \"name\": \"Multan\",\n        \"lon\": 71.47824,\n        \"lat\": 30.19679,\n        \"country\": \"Pakistan\"\n    },\n    {\n        \"name\": \"Mumbai\",\n        \"lon\": 72.88261,\n        \"lat\": 19.07283,\n        \"country\": \"India\"\n    },\n    {\n        \"name\": \"Muscat\",\n        \"lon\": 58.40778,\n        \"lat\": 23.58413,\n        \"country\": \"Oman\"\n    },\n    {\n        \"name\": \"N'Djamena\",\n        \"lon\": 15.0444,\n        \"lat\": 12.10672,\n        \"country\": \"Chad\"\n    },\n    {\n        \"name\": \"Nagoya\",\n        \"lon\": 136.90641,\n        \"lat\": 35.18147,\n        \"country\": \"Japan\"\n    },\n    {\n        \"name\": \"Nairobi\",\n        \"lon\": 36.81667,\n        \"lat\": -1.28333,\n        \"country\": \"Kenya\"\n    },\n    {\n        \"name\": \"Nanchong\",\n        \"lon\": 106.08473,\n        \"lat\": 30.79508,\n        \"country\": \"China\"\n    },\n    {\n        \"name\": \"Nanjing\",\n        \"lon\": 118.77778,\n        \"lat\": 32.06167,\n        \"country\": \"China\"\n    },\n    {\n        \"name\": \"Nassau\",\n        \"lon\": -77.34306,\n        \"lat\": 25.05823,\n        \"country\": \"Bahamas\"\n    },\n    {\n        \"name\": \"Nay Pyi Taw\",\n        \"lon\": 96.12972,\n        \"lat\": 19.745,\n        \"country\": \"Myanmar\"\n    },\n    {\n        \"name\": \"New York\",\n        \"lon\": -74.00597,\n        \"lat\": 40.71427,\n        \"country\": \"United States\"\n    },\n    {\n        \"name\": \"Niamey\",\n        \"lon\": 2.1098,\n        \"lat\": 13.51366,\n        \"country\": \"Niger\"\n    },\n    {\n        \"name\": \"Nicosia\",\n        \"lon\": 33.3642,\n        \"lat\": 35.17531,\n        \"country\": \"Cyprus\"\n    },\n    {\n        \"name\": \"Nouakchott\",\n        \"lon\": -15.9785,\n        \"lat\": 18.08581,\n        \"country\": \"Mauritania\"\n    },\n    {\n        \"name\": \"Noumea\",\n        \"lon\": 166.44884,\n        \"lat\": -22.27407,\n        \"country\": \"New Caledonia\"\n    },\n    {\n        \"name\": \"Novosibirsk\",\n        \"lon\": 82.9346,\n        \"lat\": 55.0415,\n        \"country\": \"Russia\"\n    },\n    {\n        \"name\": \"Nuku'alofa\",\n        \"lon\": -175.2018,\n        \"lat\": -21.13938,\n        \"country\": \"Tonga\"\n    },\n    {\n        \"name\": \"Nur-Sultan\",\n        \"lon\": 71.44598,\n        \"lat\": 51.1801,\n        \"country\": \"Kazakhstan\"\n    },\n    {\n        \"name\": \"Nuuk\",\n        \"lon\": -51.72157,\n        \"lat\": 64.18347,\n        \"country\": \"Greenland\"\n    },\n    {\n        \"name\": \"Oranjestad\",\n        \"lon\": -70.02703,\n        \"lat\": 12.52398,\n        \"country\": \"Aruba\"\n    },\n    {\n        \"name\": \"Osaka\",\n        \"lon\": 135.50218,\n        \"lat\": 34.69374,\n        \"country\": \"Japan\"\n    },\n    {\n        \"name\": \"Oslo\",\n        \"lon\": 10.74609,\n        \"lat\": 59.91273,\n        \"country\": \"Norway\"\n    },\n    {\n        \"name\": \"Ottawa\",\n        \"lon\": -75.69812,\n        \"lat\": 45.41117,\n        \"country\": \"Canada\"\n    },\n    {\n        \"name\": \"Ouagadougou\",\n        \"lon\": -1.53388,\n        \"lat\": 12.36566,\n        \"country\": \"Burkina Faso\"\n    },\n    {\n        \"name\": \"Pago Pago\",\n        \"lon\": -170.7025,\n        \"lat\": -14.27806,\n        \"country\": \"American Samoa\"\n    },\n    {\n        \"name\": \"Palembang\",\n        \"lon\": 104.7458,\n        \"lat\": -2.91673,\n        \"country\": \"Indonesia\"\n    },\n    {\n        \"name\": \"Palo Alto\",\n        \"lon\": -122.14302,\n        \"lat\": 37.44188,\n        \"country\": \"United States\"\n    },\n    {\n        \"name\": \"Panama\",\n        \"lon\": -79.51973,\n        \"lat\": 8.9936,\n        \"country\": \"Panama\"\n    },\n    {\n        \"name\": \"Papeete\",\n        \"lon\": -149.5665,\n        \"lat\": -17.53733,\n        \"country\": \"French Polynesia\"\n    },\n    {\n        \"name\": \"Paramaribo\",\n        \"lon\": -55.16682,\n        \"lat\": 5.86638,\n        \"country\": \"Suriname\"\n    },\n    {\n        \"name\": \"Paris\",\n        \"lon\": 2.3488,\n        \"lat\": 48.85341,\n        \"country\": \"France\"\n    },\n    {\n        \"name\": \"Perth\",\n        \"lon\": 115.8614,\n        \"lat\": -31.95224,\n        \"country\": \"Australia\"\n    },\n    {\n        \"name\": \"Philadelphia\",\n        \"lon\": -75.16379,\n        \"lat\": 39.95233,\n        \"country\": \"United States\"\n    },\n    {\n        \"name\": \"Phnom Penh\",\n        \"lon\": 104.91601,\n        \"lat\": 11.56245,\n        \"country\": \"Cambodia\"\n    },\n    {\n        \"name\": \"Phoenix\",\n        \"lon\": -112.07404,\n        \"lat\": 33.44838,\n        \"country\": \"United States\"\n    },\n    {\n        \"name\": \"Podgorica\",\n        \"lon\": 19.26361,\n        \"lat\": 42.44111,\n        \"country\": \"Montenegro\"\n    },\n    {\n        \"name\": \"Port Louis\",\n        \"lon\": 57.49889,\n        \"lat\": -20.16194,\n        \"country\": \"Mauritius\"\n    },\n    {\n        \"name\": \"Port Moresby\",\n        \"lon\": 147.15089,\n        \"lat\": -9.47723,\n        \"country\": \"Papua New Guinea\"\n    },\n    {\n        \"name\": \"Port of Spain\",\n        \"lon\": -61.51889,\n        \"lat\": 10.66668,\n        \"country\": \"Trinidad and Tobago\"\n    },\n    {\n        \"name\": \"Port-Vila\",\n        \"lon\": 168.31366,\n        \"lat\": -17.73648,\n        \"country\": \"Vanuatu\"\n    },\n    {\n        \"name\": \"Port-au-Prince\",\n        \"lon\": -72.33881,\n        \"lat\": 18.54349,\n        \"country\": \"Haiti\"\n    },\n    {\n        \"name\": \"Porto Alegre\",\n        \"lon\": -51.23019,\n        \"lat\": -30.03283,\n        \"country\": \"Brazil\"\n    },\n    {\n        \"name\": \"Porto-Novo\",\n        \"lon\": 2.60359,\n        \"lat\": 6.49646,\n        \"country\": \"Benin\"\n    },\n    {\n        \"name\": \"Prague\",\n        \"lon\": 14.42076,\n        \"lat\": 50.08804,\n        \"country\": \"Czechia\"\n    },\n    {\n        \"name\": \"Praia\",\n        \"lon\": -23.51254,\n        \"lat\": 14.93152,\n        \"country\": \"Cabo Verde\"\n    },\n    {\n        \"name\": \"Pretoria\",\n        \"lon\": 28.18783,\n        \"lat\": -25.74486,\n        \"country\": \"South Africa\"\n    },\n    {\n        \"name\": \"Pristina\",\n        \"lon\": 21.16688,\n        \"lat\": 42.67272,\n        \"country\": \"Kosovo\"\n    },\n    {\n        \"name\": \"Puebla\",\n        \"lon\": -98.20346,\n        \"lat\": 19.03793,\n        \"country\": \"Mexico\"\n    },\n    {\n        \"name\": \"Pune\",\n        \"lon\": 73.85535,\n        \"lat\": 18.51957,\n        \"country\": \"India\"\n    },\n    {\n        \"name\": \"Pyongyang\",\n        \"lon\": 125.75432,\n        \"lat\": 39.03385,\n        \"country\": \"North Korea\"\n    },\n    {\n        \"name\": \"Quezon City\",\n        \"lon\": 121.0509,\n        \"lat\": 14.6488,\n        \"country\": \"Philippines\"\n    },\n    {\n        \"name\": \"Quito\",\n        \"lon\": -78.52495,\n        \"lat\": -0.22985,\n        \"country\": \"Ecuador\"\n    },\n    {\n        \"name\": \"Rabat\",\n        \"lon\": -6.83255,\n        \"lat\": 34.01325,\n        \"country\": \"Morocco\"\n    },\n    {\n        \"name\": \"Rawalpindi\",\n        \"lon\": 73.0479,\n        \"lat\": 33.59733,\n        \"country\": \"Pakistan\"\n    },\n    {\n        \"name\": \"Recife\",\n        \"lon\": -34.88111,\n        \"lat\": -8.05389,\n        \"country\": \"Brazil\"\n    },\n    {\n        \"name\": \"Reykjavik\",\n        \"lon\": -21.89541,\n        \"lat\": 64.13548,\n        \"country\": \"Iceland\"\n    },\n    {\n        \"name\": \"Riga\",\n        \"lon\": 24.10589,\n        \"lat\": 56.946,\n        \"country\": \"Latvia\"\n    },\n    {\n        \"name\": \"Rio de Janeiro\",\n        \"lon\": -43.18223,\n        \"lat\": -22.90642,\n        \"country\": \"Brazil\"\n    },\n    {\n        \"name\": \"Riyadh\",\n        \"lon\": 46.72185,\n        \"lat\": 24.68773,\n        \"country\": \"Saudi Arabia\"\n    },\n    {\n        \"name\": \"Road Town\",\n        \"lon\": -64.62079,\n        \"lat\": 18.42693,\n        \"country\": \"British Virgin Islands\"\n    },\n    {\n        \"name\": \"Rome\",\n        \"lon\": 12.51133,\n        \"lat\": 41.89193,\n        \"country\": \"Italy\"\n    },\n    {\n        \"name\": \"Roseau\",\n        \"lon\": -61.38808,\n        \"lat\": 15.30174,\n        \"country\": \"Dominica\"\n    },\n    {\n        \"name\": \"Saint George's\",\n        \"lon\": -61.75226,\n        \"lat\": 12.05288,\n        \"country\": \"Grenada\"\n    },\n    {\n        \"name\": \"Saint Helier\",\n        \"lon\": -2.10491,\n        \"lat\": 49.18804,\n        \"country\": \"Jersey\"\n    },\n    {\n        \"name\": \"Saint John's\",\n        \"lon\": -61.84329,\n        \"lat\": 17.12096,\n        \"country\": \"Antigua and Barbuda\"\n    },\n    {\n        \"name\": \"Saint Peter Port\",\n        \"lon\": -2.53527,\n        \"lat\": 49.45981,\n        \"country\": \"Guernsey\"\n    },\n    {\n        \"name\": \"Saint Petersburg\",\n        \"lon\": 30.31413,\n        \"lat\": 59.93863,\n        \"country\": \"Russia\"\n    },\n    {\n        \"name\": \"Saint-Denis\",\n        \"lon\": 55.4504,\n        \"lat\": -20.88231,\n        \"country\": \"Reunion\"\n    },\n    {\n        \"name\": \"Saint-Pierre\",\n        \"lon\": -56.1773,\n        \"lat\": 46.77914,\n        \"country\": \"Reunion\"\n    },\n    {\n        \"name\": \"Saipan\",\n        \"lon\": 145.7545,\n        \"lat\": 15.21233,\n        \"country\": \"Northern Mariana Islands\"\n    },\n    {\n        \"name\": \"Salvador\",\n        \"lon\": -38.51083,\n        \"lat\": -12.97111,\n        \"country\": \"Brazil\"\n    },\n    {\n        \"name\": \"San Antonio\",\n        \"lon\": -98.49363,\n        \"lat\": 29.42412,\n        \"country\": \"United States\"\n    },\n    {\n        \"name\": \"San Diego\",\n        \"lon\": -117.16472,\n        \"lat\": 32.71571,\n        \"country\": \"United States\"\n    },\n    {\n        \"name\": \"San Francisco\",\n        \"lon\": -122.41942,\n        \"lat\": 37.77493,\n        \"country\": \"United States\"\n    },\n    {\n        \"name\": \"San Jose\",\n        \"lon\": -84.08333,\n        \"lat\": 9.93333,\n        \"country\": \"United States\"\n    },\n    {\n        \"name\": \"San Juan\",\n        \"lon\": -66.10572,\n        \"lat\": 18.46633,\n        \"country\": \"Argentina\"\n    },\n    {\n        \"name\": \"San Marino\",\n        \"lon\": 12.44639,\n        \"lat\": 43.93667,\n        \"country\": \"United States\"\n    },\n    {\n        \"name\": \"San Salvador\",\n        \"lon\": -89.18718,\n        \"lat\": 13.68935,\n        \"country\": \"El Salvador\"\n    },\n    {\n        \"name\": \"Sanaa\",\n        \"lon\": 44.20667,\n        \"lat\": 15.35472,\n        \"country\": \"Yemen\"\n    },\n    {\n        \"name\": \"Santa Cruz de la Sierra\",\n        \"lon\": -63.18117,\n        \"lat\": -17.78629,\n        \"country\": \"Bolivia\"\n    },\n    {\n        \"name\": \"Santiago\",\n        \"lon\": -70.64827,\n        \"lat\": -33.45694,\n        \"country\": \"Chile\"\n    },\n    {\n        \"name\": \"Santo Domingo\",\n        \"lon\": -69.89232,\n        \"lat\": 18.47186,\n        \"country\": \"Dominican Republic\"\n    },\n    {\n        \"name\": \"Sao Paulo\",\n        \"lon\": -46.63611,\n        \"lat\": -23.5475,\n        \"country\": \"Brazil\"\n    },\n    {\n        \"name\": \"Sao Tome\",\n        \"lon\": 6.72732,\n        \"lat\": 0.33654,\n        \"country\": \"Sao Tome and Principe\"\n    },\n    {\n        \"name\": \"Sapporo\",\n        \"lon\": 141.35,\n        \"lat\": 43.06667,\n        \"country\": \"Japan\"\n    },\n    {\n        \"name\": \"Sarajevo\",\n        \"lon\": 18.35644,\n        \"lat\": 43.84864,\n        \"country\": \"Bosnia and Herzegovina\"\n    },\n    {\n        \"name\": \"Seattle\",\n        \"lon\": -122.33207,\n        \"lat\": 47.60621,\n        \"country\": \"United States\"\n    },\n    {\n        \"name\": \"Semarang\",\n        \"lon\": 110.42083,\n        \"lat\": -6.99306,\n        \"country\": \"Indonesia\"\n    },\n    {\n        \"name\": \"Seoul\",\n        \"lon\": 126.9784,\n        \"lat\": 37.566,\n        \"country\": \"South Korea\"\n    },\n    {\n        \"name\": \"Shanghai\",\n        \"lon\": 121.45806,\n        \"lat\": 31.22222,\n        \"country\": \"China\"\n    },\n    {\n        \"name\": \"Sharjah\",\n        \"lon\": 55.41206,\n        \"lat\": 25.33737,\n        \"country\": \"United Arab Emirates\"\n    },\n    {\n        \"name\": \"Shenzhen\",\n        \"lon\": 114.0683,\n        \"lat\": 22.54554,\n        \"country\": \"China\"\n    },\n    {\n        \"name\": \"Singapore\",\n        \"lon\": 103.85007,\n        \"lat\": 1.28967,\n        \"country\": \"Singapore\"\n    },\n    {\n        \"name\": \"Skopje\",\n        \"lon\": 21.43141,\n        \"lat\": 41.99646,\n        \"country\": \"North Macedonia\"\n    },\n    {\n        \"name\": \"Sofia\",\n        \"lon\": 23.32415,\n        \"lat\": 42.69751,\n        \"country\": \"Bulgaria\"\n    },\n    {\n        \"name\": \"South Tangerang\",\n        \"lon\": 106.71789,\n        \"lat\": -6.28862,\n        \"country\": \"Indonesia\"\n    },\n    {\n        \"name\": \"Soweto\",\n        \"lon\": 27.85849,\n        \"lat\": -26.26781,\n        \"country\": \"South Africa\"\n    },\n    {\n        \"name\": \"Stockholm\",\n        \"lon\": 18.06871,\n        \"lat\": 59.32938,\n        \"country\": \"Sweden\"\n    },\n    {\n        \"name\": \"Sucre\",\n        \"lon\": -65.26274,\n        \"lat\": -19.03332,\n        \"country\": \"Bolivia\"\n    },\n    {\n        \"name\": \"Surabaya\",\n        \"lon\": 112.75083,\n        \"lat\": -7.24917,\n        \"country\": \"Indonesia\"\n    },\n    {\n        \"name\": \"Surat\",\n        \"lon\": 72.83023,\n        \"lat\": 21.19594,\n        \"country\": \"India\"\n    },\n    {\n        \"name\": \"Suva\",\n        \"lon\": 178.44149,\n        \"lat\": -18.14161,\n        \"country\": \"Fiji\"\n    },\n    {\n        \"name\": \"Sydney\",\n        \"lon\": 151.20732,\n        \"lat\": -33.86785,\n        \"country\": \"Australia\"\n    },\n    {\n        \"name\": \"Tabriz\",\n        \"lon\": 46.2919,\n        \"lat\": 38.08,\n        \"country\": \"Iran\"\n    },\n    {\n        \"name\": \"Taipei\",\n        \"lon\": 121.53185,\n        \"lat\": 25.04776,\n        \"country\": \"Taiwan\"\n    },\n    {\n        \"name\": \"Tallinn\",\n        \"lon\": 24.75353,\n        \"lat\": 59.43696,\n        \"country\": \"Estonia\"\n    },\n    {\n        \"name\": \"Tangerang\",\n        \"lon\": 106.63,\n        \"lat\": -6.17806,\n        \"country\": \"Indonesia\"\n    },\n    {\n        \"name\": \"Tarawa\",\n        \"lon\": 172.97696,\n        \"lat\": 1.3278,\n        \"country\": \"Kiribati\"\n    },\n    {\n        \"name\": \"Tashkent\",\n        \"lon\": 69.21627,\n        \"lat\": 41.26465,\n        \"country\": \"Uzbekistan\"\n    },\n    {\n        \"name\": \"Tbilisi\",\n        \"lon\": 44.83368,\n        \"lat\": 41.69411,\n        \"country\": \"Georgia\"\n    },\n    {\n        \"name\": \"Tegucigalpa\",\n        \"lon\": -87.20681,\n        \"lat\": 14.0818,\n        \"country\": \"Honduras\"\n    },\n    {\n        \"name\": \"Tehran\",\n        \"lon\": 51.42151,\n        \"lat\": 35.69439,\n        \"country\": \"Iran\"\n    },\n    {\n        \"name\": \"Tel Aviv\",\n        \"lon\": 34.78057,\n        \"lat\": 32.08088,\n        \"country\": \"Israel\"\n    },\n    {\n        \"name\": \"Thimphu\",\n        \"lon\": 89.64191,\n        \"lat\": 27.46609,\n        \"country\": \"Bhutan\"\n    },\n    {\n        \"name\": \"Tianjin\",\n        \"lon\": 117.17667,\n        \"lat\": 39.14222,\n        \"country\": \"China\"\n    },\n    {\n        \"name\": \"Tijuana\",\n        \"lon\": -117.00371,\n        \"lat\": 32.5027,\n        \"country\": \"Mexico\"\n    },\n    {\n        \"name\": \"Tirana\",\n        \"lon\": 19.81889,\n        \"lat\": 41.3275,\n        \"country\": \"Albania\"\n    },\n    {\n        \"name\": \"Tokyo\",\n        \"lon\": 139.69171,\n        \"lat\": 35.6895,\n        \"country\": \"Japan\"\n    },\n    {\n        \"name\": \"Toronto\",\n        \"lon\": -79.4163,\n        \"lat\": 43.70011,\n        \"country\": \"Canada\"\n    },\n    {\n        \"name\": \"Torshavn\",\n        \"lon\": -6.77164,\n        \"lat\": 62.00973,\n        \"country\": \"Faroe Islands\"\n    },\n    {\n        \"name\": \"Tripoli\",\n        \"lon\": 13.18733,\n        \"lat\": 32.88743,\n        \"country\": \"Libya\"\n    },\n    {\n        \"name\": \"Tunis\",\n        \"lon\": 10.16579,\n        \"lat\": 36.81897,\n        \"country\": \"Tunisia\"\n    },\n    {\n        \"name\": \"Ulan Bator\",\n        \"lon\": 106.88324,\n        \"lat\": 47.90771,\n        \"country\": \"Mongolia\"\n    },\n    {\n        \"name\": \"Vaduz\",\n        \"lon\": 9.52154,\n        \"lat\": 47.14151,\n        \"country\": \"Liechtenstein\"\n    },\n    {\n        \"name\": \"Valencia\",\n        \"lon\": -68.00765,\n        \"lat\": 10.16202,\n        \"country\": \"Venezuela\"\n    },\n    {\n        \"name\": \"Valletta\",\n        \"lon\": 14.5148,\n        \"lat\": 35.89968,\n        \"country\": \"Malta\"\n    },\n    {\n        \"name\": \"Vancouver\",\n        \"lon\": -123.11934,\n        \"lat\": 49.24966,\n        \"country\": \"Canada\"\n    },\n    {\n        \"name\": \"Victoria\",\n        \"lon\": 55.45501,\n        \"lat\": -4.62001,\n        \"country\": \"Canada\"\n    },\n    {\n        \"name\": \"Vienna\",\n        \"lon\": 16.37208,\n        \"lat\": 48.20849,\n        \"country\": \"Austria\"\n    },\n    {\n        \"name\": \"Vientiane\",\n        \"lon\": 102.6,\n        \"lat\": 17.96667,\n        \"country\": \"Laos\"\n    },\n    {\n        \"name\": \"Vilnius\",\n        \"lon\": 25.2798,\n        \"lat\": 54.68916,\n        \"country\": \"Lithuania\"\n    },\n    {\n        \"name\": \"Warsaw\",\n        \"lon\": 21.01178,\n        \"lat\": 52.22977,\n        \"country\": \"Poland\"\n    },\n    {\n        \"name\": \"Washington\",\n        \"lon\": -77.03637,\n        \"lat\": 38.89511,\n        \"country\": \"United States\"\n    },\n    {\n        \"name\": \"Wellington\",\n        \"lon\": 174.77557,\n        \"lat\": -41.28664,\n        \"country\": \"New Zealand\"\n    },\n    {\n        \"name\": \"Willemstad\",\n        \"lon\": -68.93354,\n        \"lat\": 12.1084,\n        \"country\": \"Curacao\"\n    },\n    {\n        \"name\": \"Windhoek\",\n        \"lon\": 17.08323,\n        \"lat\": -22.55941,\n        \"country\": \"Namibia\"\n    },\n    {\n        \"name\": \"Wuhan\",\n        \"lon\": 114.26667,\n        \"lat\": 30.58333,\n        \"country\": \"China\"\n    },\n    {\n        \"name\": \"Xi'an\",\n        \"lon\": 108.92861,\n        \"lat\": 34.25833,\n        \"country\": \"China\"\n    },\n    {\n        \"name\": \"Yamoussoukro\",\n        \"lon\": -5.27674,\n        \"lat\": 6.82055,\n        \"country\": \"Ivory Coast\"\n    },\n    {\n        \"name\": \"Yangon\",\n        \"lon\": 96.15611,\n        \"lat\": 16.80528,\n        \"country\": \"Myanmar\"\n    },\n    {\n        \"name\": \"Yaounde\",\n        \"lon\": 11.51667,\n        \"lat\": 3.86667,\n        \"country\": \"Cameroon\"\n    },\n    {\n        \"name\": \"Yekaterinburg\",\n        \"lon\": 60.6122,\n        \"lat\": 56.8519,\n        \"country\": \"Russia\"\n    },\n    {\n        \"name\": \"Yerevan\",\n        \"lon\": 44.51361,\n        \"lat\": 40.18111,\n        \"country\": \"Armenia\"\n    },\n    {\n        \"name\": \"Yokohama\",\n        \"lon\": 139.65,\n        \"lat\": 35.43333,\n        \"country\": \"Japan\"\n    },\n    {\n        \"name\": \"Zagreb\",\n        \"lon\": 15.97798,\n        \"lat\": 45.81444,\n        \"country\": \"Croatia\"\n    }\n]","import styled from \"styled-components\";\nimport {CityName, CurrentTime, SelectCityButton} from \"../../Pages/MainStyles\";\n\nexport const ModalTitle = styled(CityName)`\n  text-align: center;\n  opacity: 1;\n  display: block;\n  margin-bottom: 30px;\n  margin-right: 0;\n`;\n\nexport const ModalSubtitle = styled(CurrentTime)`\n  display: block;\n  margin-bottom: 15px;\n`;\n\nexport const ModalInput = styled.input`\n  font-size: 18px;\n  padding: 10px;\n  margin-bottom: 20px;\n  width: 100%;\n  border: none;\n  border-radius: 3px;\n`;\n\nexport const ModalButton = styled(SelectCityButton)`\n  padding: 7px 25px;\n  margin-right: 0;\n  font-size: 18px;\n  float: right;\n`;","import React, {useState} from \"react\";\nimport {countryList} from \"../../Utils/cities_list\";\nimport Lookup from \"country-code-lookup\";\nimport Modal from \"react-modal\";\nimport {ModalButton, ModalInput, ModalSubtitle, ModalTitle} from \"./CountriesDropdownStyles\";\n\nexport const CountriesDropdown = ({isModalOpen, closeModal, handleSelectCountry}) => {\n    const [selectedCityName, setSelectedCityName] = useState(\"\");\n\n    const handleFromCountries = (e) => {\n        e.preventDefault();\n        const selectedCountry = countryList.find((country) => country.name === selectedCityName)\n        const countryData = Lookup.byCountry(selectedCountry.country)\n        if (countryData === null) alert(\"Выбранный город не найден в базе, попробуйте другой\")\n        else handleSelectCountry(selectedCityName, countryData.iso2)\n        closeModal()\n    };\n\n    const customStyles = {\n        content: {\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)',\n            borderRadius: '16px',\n            background: \"#498CEC\"\n        },\n        overlay: {\n            backgroundColor: 'rgba(255, 255, 255, 0.45)'\n        }\n    };\n\n    return (\n        <Modal\n            ariaHideApp={false}\n            isOpen={isModalOpen}\n            onRequestClose={closeModal}\n            style={customStyles}\n            contentLabel=\"Select Country\"\n        >\n            <ModalTitle>Смена города</ModalTitle>\n            <form id={\"form\"} onSubmit={handleFromCountries}>\n                <label>\n                    <ModalSubtitle>Введите название города или выберите из списка:</ModalSubtitle>\n                    <ModalInput list=\"capitals\" name=\"myCapitals\"\n                                onChange={(e) => setSelectedCityName(e.target.value)}/>\n                </label>\n                <datalist id=\"capitals\">\n                    {countryList.map((country, key) => (\n                        <option key={key} title={country.code} value={country.name}>\n                            {country.name}\n                        </option>\n                    ))}\n                </datalist>\n                <ModalButton type=\"submit\">Поиск</ModalButton>\n            </form>\n        </Modal>\n    );\n}","//footer\nimport styled from \"styled-components\";\n\nexport const Footer = styled.footer`\n  flex: 0 1 auto;\n  border-top: 1px solid rgba(255, 255, 255, 0.66);\n\n  z-index: ${props => props.isModalOpen ? -1 : \"unset\"};\n\n  div {\n\n  }\n`;\n\nexport const FooterContent = styled.div`\n  position: relative;\n  max-width: 1075px;\n  margin: 37px auto 93px;\n`;\n\nexport const FooterItemDivider = styled.div`\n  position: absolute;\n  border-left: 1px solid rgba(255, 255, 255, 0.66);\n  height: 100%;\n`;\n\nexport const FooterItem = styled.div`\n  text-align: center;\n  color: #FFFFFF;\n`;\n\nexport const FooterItemTime = styled.div`\n  font-weight: 400;\n  font-size: 18px;\n  color: #FFFFFF;\n  padding-bottom: 17px;\n  padding-top: 7px;\n`;\n\nexport const FooterItemTemp = styled.div`\n  font-weight: 400;\n  font-size: 18px;\n  color: #FFFFFF;\n  padding-top: 15px;\n  padding-bottom: 8px;\n`;\n//footer end","import React from \"react\";\n\nimport 'swiper/swiper-bundle.min.css'\nimport 'swiper/swiper.scss'\nimport {Swiper, SwiperSlide} from \"swiper/react\";\nimport SwiperCore, {A11y, Navigation, Scrollbar} from 'swiper'\nimport {FooterContent, FooterItem, FooterItemDivider, FooterItemTemp, FooterItemTime} from \"./FooterSwiperStyles\";\nimport {setWeatherImage} from \"../../Utils/setWeatherImage\";\n\nSwiperCore.use([Navigation, A11y, Scrollbar])\n\nexport const DailyForecast = ({days}) => {\n    return (<FooterContent>\n        <div className=\"next-button\">\n            <img src=\"./img/content/swiper-next.svg\" alt=\"next\"/>\n        </div>\n        <div className=\"prev-button\">\n            <img src=\"./img/content/swiper-prev.svg\" alt=\"prev\"/>\n        </div>\n        <Swiper\n            slidesPerView={11}\n            modules={[Navigation, Scrollbar, A11y]}\n            navigation={{\n                nextEl: '.next-button', prevEl: '.prev-button',\n            }}\n            breakpoints={{\n                320: {\n                    slidesPerView: 1,\n                }, 480: {\n                    slidesPerView: 2,\n                }, 640: {\n                    slidesPerView: 3,\n                }, 768: {\n                    slidesPerView: 4,\n                }, 1024: {\n                    slidesPerView: 6,\n                }, 1196: {\n                    slidesPerView: 7,\n                }, 1440: {\n                    slidesPerView: 11,\n                }\n            }}\n        >\n            {days.map(e => {\n                let hours = new Date(e.dt_txt).getHours()\n                const minutes = new Date(e.dt_txt).getMinutes() + \"0\"\n                if (hours < 10) hours = \"0\" + hours\n                let time = `${hours}:${minutes}`\n\n                if (new Date().getDay() !== new Date(e.dt_txt).getDay()) {\n                    const weekday = new Date(e.dt_txt).toLocaleString(\"ru-RU\", {weekday: \"short\"})\n                    time = `${weekday.charAt(0).toUpperCase() + weekday.slice(1)}. ${time}`\n                }\n\n                let temp = Math.round(e.main.temp)\n                if (temp > 0) temp = \"+\" + temp\n\n                const imageUri = setWeatherImage(e.weather[0].main, new Date(e.dt_txt).toLocaleString('ru-RU', {\n                    hour: \"numeric\", minute: \"numeric\"\n                }))\n                return (\n\n                    <SwiperSlide key={e.dt_txt}>\n                        {time.includes(\"00:00\") ? <FooterItemDivider/> : null}\n                        <FooterItem>\n                            <FooterItemTime>{time}</FooterItemTime>\n                            <img height={25} src={imageUri} alt=\"condition\"/>\n                            <FooterItemTemp>{temp}<span>°C</span></FooterItemTemp>\n                        </FooterItem>\n                    </SwiperSlide>)\n            })}\n        </Swiper>\n    </FooterContent>)\n}","import React, {useEffect, useState} from 'react';\nimport {weatherApi} from \"../Api/Api\";\nimport {setWeatherImage} from \"../Utils/setWeatherImage\";\nimport Loader from \"../Components/Loader/loader\";\nimport {\n    ChangeCityButton,\n    CityName,\n    Container,\n    Content,\n    ContentAdditional,\n    ContentDesc,\n    ContentTemp,\n    CurrentTime,\n    Header,\n    HeaderBottom,\n    HeaderTop,\n    LoaderWrapper,\n    MyLocationButton,\n    SelectCityButton,\n    Wrapper\n} from \"./MainStyles\";\n\nimport {CountriesDropdown} from \"../Components/CountriesDropdown/CountriesDropdown\";\nimport {DailyForecast} from \"../Components/FooterSwiper/FooterSwiper\";\nimport {Footer} from \"../Components/FooterSwiper/FooterSwiperStyles\";\nimport {unixToWeekday, days} from \"../Helpers/DaysHelper\";\n\n\nexport const Main = () => {\n    // let interval\n    const [inter, setInter] = useState(0)\n    const [currentLocationData, setCurrentLocationData] = useState([])\n    const [isLoading, setIsLoading] = useState(true)\n    const [isSelectedCity, setIsSelectedCity] = useState(true)\n    const [currentTime, setCurrentTime] = useState(\"\")\n    const [dailyWeather, setDailyWeather] = useState([])\n    const [isModalOpen, setIsModalOpen] = useState(false)\n    const [selectedCityTimezone, setSelectedCityTimezone] = useState(0)\n    const [selectedCity, setSelectedCity] = useState(false)\n\n    const calcTime = (offset) => {\n        setSelectedCityTimezone(offset)\n        setSelectedCity(true)\n        console.log(\"nibba\")\n        let interval = setInterval(() => {\n            let normalTimezoneOffset = offset / 60 / 60\n            // create Date object for current location\n            const d = new Date();\n\n            // convert to msec\n            // subtract local time zone offset\n            // get UTC time in msec\n            const utc = d.getTime() + (d.getTimezoneOffset() * 60000);\n\n            // create new Date object for different city\n            // using supplied offset\n            const nd = new Date(utc + (3600000 * normalTimezoneOffset));\n            window.clearInterval(inter)\n            setInter(0)\n            // setCurrentTime(nd)\n\n            let hours = nd.getHours()\n            let minutes = nd.getMinutes()\n            if (hours < 10) hours = \"0\" + hours\n            if (minutes < 10) minutes = \"0\" + minutes\n            let currentTime = `${hours}:${minutes}`\n            setCurrentTime(currentTime)\n        }, 1000)\n        setInter(interval)\n    }\n\n    const handleCountrySelect = async (city, countryCode) => {\n        setIsLoading(true)\n        try {\n            const weeklyRes = await weatherApi.certainCity(city, countryCode)\n            setDailyWeather({list: weeklyRes.data.list, city: weeklyRes.data.city})\n\n            const locationRes = await weatherApi.byCoords(weeklyRes.data.city.coord.lat, weeklyRes.data.city.coord.lon)\n            let ms = (locationRes.data.dt) * 1000\n            let date = new Date(ms)\n            let {description, main} = locationRes.data.weather[0]\n            let {temp, feels_like, humidity, pressure} = locationRes.data.main\n            let {name, timezone} = locationRes.data\n            let {speed} = locationRes.data.wind\n            setSelectedCityTimezone(timezone)\n            calcTime(timezone)\n            temp = Math.round(temp)\n            description = description.charAt(0).toUpperCase() + description.slice(1)\n            if (temp > 0) {\n                temp = \"+\" + temp\n            }\n            setCurrentLocationData({\n                name, temp, feels_like, description, main, date, humidity, pressure, speed\n            })\n            setIsSelectedCity(true)\n        } catch (e) {\n            console.log(\"ooops\")\n            setIsSelectedCity(false)\n        }\n        setIsLoading(false)\n    }\n\n    const fetchUserGeolocation = () => {\n        setIsLoading(true)\n        navigator.geolocation.getCurrentPosition(async (data) => {\n            setIsSelectedCity(true)\n            try {\n                const locationRes = await weatherApi.byCoords(data.coords.latitude, data.coords.longitude)\n                let ms = (locationRes.data.dt) * 1000\n                let date = new Date(ms)\n                let {description, main} = locationRes.data.weather[0]\n                let {temp, feels_like, humidity, pressure} = locationRes.data.main\n                let {name} = locationRes.data\n                let {speed} = locationRes.data.wind\n                temp = Math.round(temp)\n                description = description.charAt(0).toUpperCase() + description.slice(1)\n                if (temp > 0) {\n                    temp = \"+\" + temp\n                }\n                setCurrentLocationData({\n                    name, temp, feels_like, description, main, date, humidity, pressure, speed\n                })\n\n                const weeklyRes = await weatherApi.forWeek(data.coords.latitude, data.coords.longitude)\n\n                setDailyWeather({list: weeklyRes.data.list, city: weeklyRes.data.city})\n                setIsLoading(false)\n            } catch (e) {\n                alert('Возникла проблема. Лимит запросов на сервер на сегодня, видимо, исчерпан :(')\n            }\n        }, () => {\n            setIsSelectedCity(false)\n            setIsLoading(false)\n            alert('Мое супер приложение, к сожалению, не может работать без ваших геоданных. Разрешите мне ими воспользоваться плз')\n        }, {enableHighAccuracy: true})\n    }\n\n    useEffect(() => {\n        const d = new Date()\n        let hours = d.getHours()\n        let minutes = d.getMinutes()\n        if (hours < 10) hours = \"0\" + hours\n        if (minutes < 10) minutes = \"0\" + minutes\n        let currentTime = `${hours}:${minutes}`\n        setCurrentTime(currentTime)\n        let interval = setInterval(() => {\n            console.log(selectedCity.toString())\n            console.log(interval)\n            if (selectedCity) return\n            const d = new Date()\n            let hours = d.getHours()\n            let minutes = d.getMinutes()\n            if (hours < 10) hours = \"0\" + hours\n            if (minutes < 10) minutes = \"0\" + minutes\n            let currentTime = `${hours}:${minutes}`\n            setCurrentTime(currentTime)\n        }, 1000)\n        setInter(interval)\n        fetchUserGeolocation()\n\n        return () => {\n            console.log(\"return useEffect\")\n            window.clearInterval(inter)\n            setInter(0)\n        }\n    }, [])\n\n\n    return (<Wrapper>{isLoading ? <LoaderWrapper>\n        <Loader/>\n    </LoaderWrapper> : <>\n        <Header>\n            <Container>\n                <HeaderTop isSelectedCity={isSelectedCity}>\n                    {isSelectedCity ? <CityName>{currentLocationData.name}</CityName> :\n                        <SelectCityButton onClick={() => setIsModalOpen(true)}>Выбрать город</SelectCityButton>}\n                    <CurrentTime>Сейчас {currentTime}</CurrentTime>\n                </HeaderTop>\n                <HeaderBottom>\n                    <ChangeCityButton onClick={() => setIsModalOpen(true)}>Сменить город</ChangeCityButton>\n                    <MyLocationButton onClick={fetchUserGeolocation}>\n                        <img src=\"./img/content/my_location.svg\" alt=\"navigator\"/>\n                        Мое местоположение\n                    </MyLocationButton>\n                </HeaderBottom>\n            </Container>\n        </Header>\n        <Content>\n            <Container>{isSelectedCity ? <>\n                <ContentTemp>\n                    <img width={140} height={140}\n                         src={setWeatherImage(currentLocationData.main, new Date(currentLocationData.date).toLocaleString('ru-RU', {\n                             hour: \"numeric\", minute: \"numeric\"\n                         }))} alt=\"weather condition\"/>\n                    <span>{currentLocationData.temp}<span>°</span></span>\n                </ContentTemp>\n                <ContentDesc>\n                    {currentLocationData.description}\n                </ContentDesc>\n                <ContentAdditional>\n                    <div>\n                        <img src=\"./img/content/wind.svg\" alt=\"wind\"/>\n                        <span>{currentLocationData.speed} м/с</span>\n                    </div>\n                    <div>\n                        <img src=\"./img/content/humidity.svg\" alt=\"humidity\"/>\n                        <span>{currentLocationData.humidity}%</span>\n                    </div>\n                    <div>\n                        <img src=\"./img/content/pressure.svg\" alt=\"pressure\"/>\n                        <span>{currentLocationData.pressure} мм.рт.ст</span>\n                    </div>\n                </ContentAdditional></> : <></>}\n            </Container>\n        </Content>\n        <Footer isModalOpen={isModalOpen}>\n            <Container>\n                {isSelectedCity ? <DailyForecast days={dailyWeather.list}/> : <></>}\n            </Container>\n        </Footer>\n        <CountriesDropdown closeModal={() => setIsModalOpen(false)} isModalOpen={isModalOpen}\n                           handleSelectCountry={handleCountrySelect}/>\n    </>}\n    </Wrapper>);\n};","import {Main} from \"./Pages/Main\";\n\nfunction App() {\n    return (\n        <Main/>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter as Router} from \"react-router-dom\";\n\n\nReactDOM.render(\n  <Router>\n    <App/>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}