{"version":3,"sources":["Components/Main/Main.module.scss","Components/Daily/WeekWeather/OneDayWeather/HourlyWeather/HourlyWeather.module.scss","Components/Daily/WeekWeather/WeekWeather.module.scss","Components/Daily/Daily.module.scss","Components/Daily/WeekWeather/OneDayWeather/OneDayWeather.module.scss","Api/Api.js","Components/setWeatherImage.js","Components/loader.js","Components/Main/Main.js","Components/Daily/WeekWeather/OneDayWeather/HourlyWeather/HourlyWeather.js","Components/Daily/WeekWeather/OneDayWeather/OneDayWeather.js","Components/Daily/WeekWeather/WeekWeather.js","Components/Daily/Daily.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","instance","axios","create","baseURL","weatherApi","lat","lon","get","setWeatherImage","weather","time","Loader","width","height","src","alt","Main","useState","currentLocationData","setCurrentLocationData","loading","setLoading","useEffect","navigator","geolocation","getCurrentPosition","data","coords","latitude","longitude","then","res","ms","dt","date","Date","description","main","temp","feels_like","name","e","console","log","alert","enableHighAccuracy","className","s","App","appHeader","appWrapper","appInner","weatherCondition","temperature","Math","round","toLocaleString","hour","minute","middle","to","SwiperCore","use","Navigation","A11y","Scrollbar","HourlyWeather","hourlyWeather","slidesPerView","modules","navigation","length","scrollbar","draggable","map","isActive","hourlyCard","day","degrees","feelsLike","OneDayWeather","dayName","weekdayName","today","weekday","yesterday","setDate","getDate","tomorrow","WeekWeather","city","list","setDayName","unixToWeekday","dt_txt","toLowerCase","days","arr","month","week","filter","sort","a","b","reverse","el","header","forecastWrapper","Daily","dailyWeather","setDailyWeather","error","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c5757033.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Main_App__2LAkY\",\"appHeader\":\"Main_appHeader__2Sh15\",\"appWrapper\":\"Main_appWrapper__1ytSq\",\"appInner\":\"Main_appInner__yFPhO\",\"weatherCondition\":\"Main_weatherCondition__1IKFo\",\"temperature\":\"Main_temperature__Ysq96\",\"middle\":\"Main_middle__1D-d2\",\"description\":\"Main_description__Sw96o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"HourlyWeather_header__1PNST\",\"hourlyWeather\":\"HourlyWeather_hourlyWeather__27i1B\",\"hourlyCard\":\"HourlyWeather_hourlyCard__1_xOF\",\"date\":\"HourlyWeather_date__O55l_\",\"degrees\":\"HourlyWeather_degrees__1hSnq\",\"weatherCondition\":\"HourlyWeather_weatherCondition__3WOxn\",\"feelsLike\":\"HourlyWeather_feelsLike__25sYa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"WeekWeather_header__1oSl8\",\"forecastWrapper\":\"WeekWeather_forecastWrapper__2In7N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Daily_App__1pEra\",\"appHeader\":\"Daily_appHeader__3kX1Z\",\"arrow\":\"Daily_arrow__2nTDE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weekdayName\":\"OneDayWeather_weekdayName__OdtAS\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'http://api.openweathermap.org/data/2.5/'\r\n})\r\n\r\nexport const weatherApi = {\r\n  byCoords(lat, lon) {\r\n    return instance.get(`weather?lat=${lat}&lon=${lon}&units=metric&lang=ru&appid=cf10b6eda7817e86696f8e4106d14a27`)\r\n  },\r\n  forWeek(lat, lon) {\r\n    return instance.get(`forecast?lat=${lat}&lon=${lon}&units=metric&lang=ru&appid=cf10b6eda7817e86696f8e4106d14a27`)\r\n  },\r\n  daily(lat, lon) {\r\n    return instance.get(`forecast/daily?lat=${lat}&lon=${lon}&units=metric&lang=ru&cnt=5&appid=cf10b6eda7817e86696f8e4106d14a27`)\r\n  }\r\n}","export const setWeatherImage = (weather, time) => {\r\n  switch (weather) {\r\n    case 'Thunderstorm': {\r\n      return './img/weather/thunder.svg'\r\n    }\r\n    case 'Drizzle': {\r\n      return './img/weather/drizzle.svg'\r\n    }\r\n    case 'Rain': {\r\n      return './img/weather/rain.svg'\r\n    }\r\n    case 'Snow': {\r\n      return './img/weather/snow.svg'\r\n    }\r\n    case 'Clear': {\r\n      if (time >= '18:00' || time <= '05:00') {\r\n        return './img/weather/night.svg'\r\n      } else {\r\n        return './img/weather/day.svg'\r\n      }\r\n    }\r\n    case 'Clouds': {\r\n      if (time >= '18:00' || time <= '05:00') {\r\n        return './img/weather/cloudy-night.svg'\r\n      } else {\r\n        return './img/weather/cloudy-day.svg'\r\n      }\r\n    }\r\n    default: {\r\n      return './img/weather/mist.svg'\r\n    }\r\n  }\r\n}","import React from 'react';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div>\r\n      <img width={100} height={100} src=\"./img/content/loader.svg\" alt=\"Loading...\"/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;","import React, {useEffect, useState} from 'react';\r\nimport {weatherApi} from \"../../Api/Api\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {setWeatherImage} from \"../setWeatherImage\";\r\nimport s from './Main.module.scss'\r\nimport Loader from \"../loader\";\r\n\r\nconst Main = () => {\r\n    const [currentLocationData, setCurrentLocationData] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    useEffect(() => {\r\n      setLoading(true)\r\n      navigator.geolocation.getCurrentPosition((data) => {\r\n        try {\r\n          weatherApi.byCoords(data.coords.latitude, data.coords.longitude)\r\n            .then(res => {\r\n              let ms = (res.data.dt) * 1000\r\n              let date = new Date(ms)\r\n              let {description, main} = res.data.weather[0]\r\n              let {temp, feels_like} = res.data.main\r\n              let {name} = res.data\r\n              setCurrentLocationData({name, temp, feels_like, description, main, date})\r\n              setLoading(false)\r\n            })\r\n        } catch (e) {\r\n          console.log(e)\r\n          alert('Возникла проблема. Лимит запросов на сервер на сегодня, видимо, исчерпан :(')\r\n        }\r\n      }, () => {\r\n        alert('Мое супер приложение, к сожалению, не может работать без ваших геоданных. Разрешите мне ими воспользоваться плз')\r\n      }, {enableHighAccuracy: true})\r\n    }, [])\r\n    return (\r\n      <div className={s.App}>\r\n        <header className={s.appHeader}>\r\n          <div className={s.appWrapper}>\r\n            <div className={s.appInner}>\r\n              {loading ?\r\n                <Loader/>\r\n                :\r\n                <>\r\n                  <h1>{currentLocationData.name}</h1>\r\n                  <div className={s.weatherCondition}>\r\n                    <div className={s.temperature}>{Math.round(currentLocationData.temp)}<span>°C</span></div>\r\n                    <img width={100} height={100}\r\n                         src={setWeatherImage(currentLocationData.main, new Date(currentLocationData.date).toLocaleString('ru-RU', {\r\n                           hour: \"numeric\",\r\n                           minute: \"numeric\"\r\n                         }))} alt=\"weather condition\"/>\r\n                  </div>\r\n                  <div className={s.middle}>\r\n                    <div className={s.description}>{currentLocationData.description}</div>\r\n                    <div>Ощущается как {Math.round(currentLocationData.feels_like)}° C</div>\r\n                  </div>\r\n                  <Link to={'/daily'}>\r\n                    <span>Погода на другие дни</span>\r\n                  </Link>\r\n                </>\r\n              }\r\n            </div>\r\n          </div>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n;\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nimport s from \"./HourlyWeather.module.scss\";\r\nimport {setWeatherImage} from \"../../../../setWeatherImage\";\r\n\r\nimport 'swiper/swiper-bundle.min.css'\r\nimport 'swiper/swiper.scss'\r\nimport {Swiper, SwiperSlide} from \"swiper/react\";\r\n\r\nimport SwiperCore, {A11y, Navigation, Scrollbar} from 'swiper'\r\n\r\nSwiperCore.use([Navigation, A11y, Scrollbar])\r\n\r\n\r\nconst HourlyWeather = ({data}) => {\r\n  return (\r\n    <div className={s.hourlyWeather}>\r\n      <Swiper\r\n        slidesPerView={1}\r\n        modules={[Navigation, Scrollbar, A11y]}\r\n        navigation={data.length > 1 ? true : false}\r\n        scrollbar={{draggable: true}}\r\n      >\r\n        {data.map(e => (\r\n\r\n            <SwiperSlide>\r\n              {({isActive}) => (\r\n                <div>Current slide is {isActive ? 'active' : 'not active'}</div>\r\n              )}\r\n              <div className={s.hourlyCard}>\r\n                <div className={s.date}>{e.day}</div>\r\n                <div className={s.degrees}>\r\n                  <div>{e.temp}<span>°C</span></div>\r\n                  <img src={setWeatherImage(e.main, new Date(e.date).toLocaleString('ru-RU', {\r\n                    hour: \"numeric\",\r\n                    minute: \"numeric\"\r\n                  }))} alt=\"\"/>\r\n                </div>\r\n                <div className={s.weatherCondition}>\r\n                  <div>{e.description ? e.description : 'no detail'}</div>\r\n                </div>\r\n                <div className={s.feelsLike}>Ощущается как <span>{e.feels_like}° C</span></div>\r\n              </div>\r\n            </SwiperSlide>\r\n          )\r\n        )}\r\n      </Swiper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HourlyWeather;","import React from 'react';\r\nimport HourlyWeather from \"./HourlyWeather/HourlyWeather\";\r\nimport s from './OneDayWeather.module.scss'\r\n\r\nconst OneDayWeather = ({dayName}) => {\r\n  const weekday = (day) => {\r\n    let today = new Date()\r\n    const yesterday = () => {\r\n      let yesterday = new Date(today)\r\n      yesterday.setDate(yesterday.getDate() - 1)\r\n      return yesterday.toLocaleString('ru-RU', {weekday: \"long\"})\r\n    }\r\n    const tomorrow = () => {\r\n      let yesterday = new Date(today)\r\n      yesterday.setDate(yesterday.getDate() + 1)\r\n      return yesterday.toLocaleString('ru-RU', {weekday: \"long\"})\r\n    }\r\n    if (day === today.toLocaleString('ru-RU', {weekday: \"long\"})) {\r\n      return 'сегодня'\r\n    } else if (day === yesterday()) {\r\n      return 'вчера'\r\n    } else if (day === tomorrow()) {\r\n      return 'завтра'\r\n    }\r\n    return day\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h1 className={s.weekdayName}>{weekday(dayName.day)}</h1>\r\n        <div>\r\n          <HourlyWeather data={dayName.data}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OneDayWeather;","import React, {useEffect, useState} from 'react';\r\nimport s from './WeekWeather.module.scss'\r\nimport OneDayWeather from \"./OneDayWeather/OneDayWeather\";\r\n\r\n\r\nconst WeekWeather = ({city, list}) => {\r\n  const [dayName, setDayName] = useState([])\r\n  const unixToHourAndMin = (time) => {\r\n    let ms = time * 1000\r\n    return new Date(ms).toLocaleString(\"ru-RU\", {hour: \"numeric\", minute: \"numeric\"})\r\n  }\r\n  const unixToWeekday = (time, dayName) => {\r\n    let day = new Date(time.dt_txt).toLocaleString(\"ru-RU\", {weekday: \"long\"}).toLowerCase()\r\n    return day === dayName\r\n  }\r\n  const days = (arr) => {\r\n    return arr.map((e) => {\r\n      let day = new Date(e.dt_txt).toLocaleString(\"ru-RU\", {\r\n        day: \"numeric\",\r\n        month: \"long\",\r\n        hour: \"numeric\",\r\n        minute: \"numeric\"\r\n      })\r\n      return {\r\n        day,\r\n        temp: Math.round(e.main.temp),\r\n        feels_like: Math.round(e.main.feels_like),\r\n        description: e.weather[0].description,\r\n        date: e.dt_txt,\r\n        main: e.weather[0].main\r\n\r\n      }\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    let week = [\r\n      {day: 'понедельник', data: days(list.filter((day) => unixToWeekday(day, 'понедельник')))},\r\n      {day: 'вторник', data: days(list.filter((day) => unixToWeekday(day, 'вторник')))},\r\n      {day: 'среда', data: days(list.filter((day) => unixToWeekday(day, 'среда')))},\r\n      {day: 'четверг', data: days(list.filter((day) => unixToWeekday(day, 'четверг')))},\r\n      {day: 'пятница', data: days(list.filter((day) => unixToWeekday(day, 'пятница')))},\r\n      {day: 'суббота', data: days(list.filter((day) => unixToWeekday(day, 'суббота')))},\r\n      {day: 'воскресенье', data: days(list.filter((day) => unixToWeekday(day, 'воскресенье')))},\r\n    ].sort((a, b) => {\r\n      if (a.data.length === 0 || b.data.length === 0) {\r\n        return 0\r\n      }\r\n      if (a.data[0].day < b.data[0].day) {\r\n        return 1\r\n      } else if (a.data[0].day > b.data[0].day) {\r\n        return -1\r\n      }\r\n    }).reverse().filter(el => el.data.length !== 0)\r\n    setDayName(week)\r\n  }, [])\r\n\r\n  return (\r\n    <div className={s.App}>\r\n      <div className={s.header}>\r\n        <h1>{city.name}</h1>\r\n      </div>\r\n      <hr/>\r\n      {dayName.length > 0 ?\r\n        <div className={s.forecastWrapper}>\r\n          {dayName.map(e => <OneDayWeather dayName={e}/>)}\r\n        </div>\r\n        : <></>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeekWeather;","import React, {useEffect, useState} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport WeekWeather from \"./WeekWeather/WeekWeather\";\r\nimport {weatherApi} from \"../../Api/Api\";\r\nimport s from './Daily.module.scss'\r\nimport Loader from \"../loader\";\r\n\r\n\r\nconst Daily = () => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [dailyWeather, setDailyWeather] = useState([])\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    navigator.geolocation.getCurrentPosition(async data => {\r\n      try {\r\n        const res = await weatherApi.forWeek(data.coords.latitude, data.coords.longitude)\r\n        setDailyWeather({list: res.data.list, city: res.data.city})\r\n        setLoading(false)\r\n      } catch (error) {\r\n        alert(error)\r\n        console.log(error)\r\n      }\r\n    }, (error) => {\r\n      alert('Plz turn on the browser geolocation bro')\r\n    }, {enableHighAccuracy: true})\r\n  }, [])\r\n\r\n  return (\r\n    <div className={s.App}>\r\n      <div className={s.appHeader}>\r\n        {loading ? <Loader/> :\r\n          <>\r\n            <Link to={'../'}>\r\n              <img src=\"./img/content/arrow.svg\" alt=\"Go .\"/>\r\n              <span>Back</span>\r\n            </Link>\r\n            <div>\r\n              <WeekWeather city={dailyWeather.city} list={dailyWeather.list}/>\r\n            </div>\r\n          </>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Daily;","import './Components/Main/Main.module.scss';\nimport Main from \"./Components/Main/Main\";\nimport {Route} from \"react-router-dom\";\nimport Daily from \"./Components/Daily/Daily\";\n\nfunction App() {\n  return (\n    <div>\n      <Route path={'/'} exact>\n        <Main/>\n      </Route>\n\n      <Route path={'/daily'} exact>\n        <Daily/>\n      </Route>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter as Router} from \"react-router-dom\";\n\n\nReactDOM.render(\n  <Router>\n    <App/>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}